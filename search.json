[{"title":"hexo+next+github个人博客搭建","url":"/2021/03/12/hexo+next+github%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/","content":"<h2 id=\"博客架构\"><a href=\"#博客架构\" class=\"headerlink\" title=\"博客架构\"></a>博客架构</h2><p>hexo + next + github pages + aliyun<br>如今现在网上有很多热门的框架，可以不用重复造轮子了，直接在大佬们的基础之上修改，博客就能快速搭建起来。我选用hexo框架<br><a href=\"https://www.bilibili.com/video/BV1Yb411a7ty\">保姆级入门视频教程传送门</a></p>\n<p>这是一个静态博客框架，操作简单！</p>\n<h2 id=\"搭建过程\"><a href=\"#搭建过程\" class=\"headerlink\" title=\"搭建过程\"></a>搭建过程</h2><p>由于我是按照别人的保姆级教程搭建的，十分简单，零基础也可以搭建一个哦。使用框架的好处是快速上手，几分钟就能搭建好博客雏形。缺点是对于技术帮助不是很大，但拿来当作个人技术总结的小空间也很是不错（比某些博客网站广告满天飞观赏性好多了，小点声）。教程网上都有，我这里就引用一下大佬们的精选文章。</p>\n<h3 id=\"hexo\"><a href=\"#hexo\" class=\"headerlink\" title=\"hexo\"></a>hexo</h3><p><img src=\"https://img-blog.csdnimg.cn/2021031222002965.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzgyNzM3Ng==,size_16,color_FFFFFF,t_70\" alt=\"hexo博客官网\"><br>框架采用的hexo静态博客框架，主题是next，简洁大方</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#x2F;&#x2F; hexo简单命令</span><br><span class=\"line\">hexo clean  清除缓存</span><br><span class=\"line\">hexo generate  建立博客</span><br><span class=\"line\">hexo serve  开启服务</span><br><span class=\"line\">hexo deploy  推送到远程仓库</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F;搭建环境：</span><br><span class=\"line\">node + npm </span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F;初级搭建教程：</span><br><span class=\"line\">上面的传送门</span><br></pre></td></tr></table></figure>\n<p>如果成功了，你应该会看到如下画面<br><img src=\"https://img-blog.csdnimg.cn/20210312222713490.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzgyNzM3Ng==,size_16,color_FFFFFF,t_70\" alt=\"hexo博客\"></p>\n<h3 id=\"选择主题\"><a href=\"#选择主题\" class=\"headerlink\" title=\"选择主题\"></a>选择主题</h3><p>hexo 的主题比较多，热门的有next、butterfly等等，可以选择一个。<br>下载也很方便，用npm命令即可<br>主题源文件在/themes 文件夹下面<br><a href=\"https://blog.csdn.net/weixin_41160054/article/details/89473887?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522161555999116780262532179%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&request_id=161555999116780262532179&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~baidu_landing_v2~default-1-89473887.first_rank_v2_pc_rank_v29&utm_term=hexo%E4%B8%8B%E8%BD%BD%E4%B8%BB%E9%A2%98\">给hexo加主题</a><br>如果看到下面这样的效果说明你添加成功了<br><img src=\"https://img-blog.csdnimg.cn/20210312224137734.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzgyNzM3Ng==,size_16,color_FFFFFF,t_70\" alt=\"next\"></p>\n<h3 id=\"博客主题优化\"><a href=\"#博客主题优化\" class=\"headerlink\" title=\"博客主题优化\"></a>博客主题优化</h3><p><a href=\"https://blog.csdn.net/nightmare_dimple/article/details/86661502\">附上大佬的优化博客链接</a></p>\n<p>下面是优化后的效果，个人主要优化了一下布局、增加卜算子访客统计、valine评论功能。<br><img src=\"https://img-blog.csdnimg.cn/20210312224555324.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzgyNzM3Ng==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"github-pages-静态网页托管\"><a href=\"#github-pages-静态网页托管\" class=\"headerlink\" title=\"github pages 静态网页托管\"></a>github pages 静态网页托管</h3><p>如果不想承担服务器的开销，其实静态博客由于占用内存小，也没必要专门买一个服务器来部署。完全可以在github、gitee、coding等代码仓库中部署，而他们都提供了静态网页服务，在仓库的settings中开启即可。有需要的还可以给博客的图片资源搞个图床（专门用来存放图片的仓库），这样就可以将图片放在网络上，访问博客时再从其他网站加载出来，提高速度和减小内存。<br>效果是你可以通过username.github.io来访问。<br><img src=\"https://img-blog.csdnimg.cn/20210312225334687.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzgyNzM3Ng==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"aliyun域名购买\"><a href=\"#aliyun域名购买\" class=\"headerlink\" title=\"aliyun域名购买\"></a>aliyun域名购买</h3><p>如果你不想使用如username.github.io这个域名，完全可以自己买个域名。新人在阿里云购买也很便宜，我买这个top域名一年只花了1元，买xyz域名头一年也只花了5元，相比服务器的高昂费用，一般域名的价格还是比较划算的。<br><img src=\"https://img-blog.csdnimg.cn/20210312225549565.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzgyNzM3Ng==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"aliyun域名解析\"><a href=\"#aliyun域名解析\" class=\"headerlink\" title=\"aliyun域名解析\"></a>aliyun域名解析</h3><p>购买之后还需要解析才能使用，所谓解析就是绑定一个域名与域名或ip之间的映射关系。解析选择CNAME类型的，将买的域名映射到github仓库的域名。可能需要花点时间和耐心。<br><img src=\"https://img-blog.csdnimg.cn/20210312225659736.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzgyNzM3Ng==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"ssl安全证书免费获取\"><a href=\"#ssl安全证书免费获取\" class=\"headerlink\" title=\"ssl安全证书免费获取\"></a>ssl安全证书免费获取</h3><p>有了ssl证书安全认证后，你的域名访问方协议将可以采用主流的https自协议，别人在访问时不会被警告不安全了。阿里云也有免费的证书可以白嫖。<br><img src=\"https://img-blog.csdnimg.cn/20210312225757827.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzgyNzM3Ng==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"博客地址\"><a href=\"#博客地址\" class=\"headerlink\" title=\"博客地址\"></a>博客地址</h2><p><img src=\"https://img-blog.csdnimg.cn/20210312223908530.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzgyNzM3Ng==,size_16,color_FFFFFF,t_70\" alt=\"next\"></p>\n<p><a href=\"https://blog.bugui66.top/\">影刃南墙の博客</a> 欢迎大伙儿来踩踩 (●’◡’●)</p>\n","categories":["hexo"],"tags":["hexo","博客"]},{"title":"oppo商城网页","url":"/2021/03/25/oppo%E5%95%86%E5%9F%8E%E7%BD%91%E9%A1%B5/","content":"<h1 id=\"项目介绍\"><a href=\"#项目介绍\" class=\"headerlink\" title=\"项目介绍\"></a>项目介绍</h1><p>这是一个纯html+css+js的前端项目，oppo商城。涉及到的主要前端知识有轮播图、吸顶灯、定时器、js等等，原生开发，没有采用流行前端框架。适合新人小白入门学习。</p>\n<h1 id=\"项目效果\"><a href=\"#项目效果\" class=\"headerlink\" title=\"项目效果\"></a>项目效果</h1><p><img src=\"https://img-blog.csdnimg.cn/20210325134335401.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzgyNzM3Ng==,size_16,color_FFFFFF,t_70\" alt=\"顶部加轮播图\"><br><img src=\"https://img-blog.csdnimg.cn/20210325134354285.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzgyNzM3Ng==,size_16,color_FFFFFF,t_70\" alt=\"明星机型\"><br><img src=\"https://img-blog.csdnimg.cn/20210325134427576.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzgyNzM3Ng==,size_16,color_FFFFFF,t_70\" alt=\"精选配件\"><br><img src=\"https://img-blog.csdnimg.cn/20210325134527111.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzgyNzM3Ng==,size_16,color_FFFFFF,t_70\" alt=\"搜索欧珀\"><br><img src=\"https://img-blog.csdnimg.cn/20210325134546476.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzgyNzM3Ng==,size_16,color_FFFFFF,t_70\" alt=\"底部\"></p>\n<h1 id=\"项目地址\"><a href=\"#项目地址\" class=\"headerlink\" title=\"项目地址\"></a>项目地址</h1><p><a href=\"https://gitee.com/hebugui/oppo-web-page.git\">gitee仓库地址，开源不易，欢迎star</a><br><img src=\"https://img-blog.csdnimg.cn/20210325135033705.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzgyNzM3Ng==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n","categories":["web"],"tags":["web前端","html","css","js"]},{"title":"【python实战】学生成绩管理系统—文件命令行版","url":"/2021/02/26/%E3%80%90python%E5%AE%9E%E6%88%98%E3%80%91%E5%AD%A6%E7%94%9F%E6%88%90%E7%BB%A9%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%E2%80%94%E6%96%87%E4%BB%B6%E5%91%BD%E4%BB%A4%E8%A1%8C%E7%89%88/","content":"<h1 id=\"写作缘起\"><a href=\"#写作缘起\" class=\"headerlink\" title=\"写作缘起\"></a>写作缘起</h1><p>南墙学习python也有一段日子了，虽然也做过爬虫实战，总感觉少了些什么，于是乎，给自己找了个小项目做，这是一个命令行下的成绩管理系统，没有界面写起来就比较简单，专注业务逻辑开发。灵感来源于大一的c语言链表实现学生成绩管理系统，python版本相对而言简单，主要是拿来练练手，巩固下python基础语法。</p>\n<h1 id=\"上代码\"><a href=\"#上代码\" class=\"headerlink\" title=\"上代码\"></a>上代码</h1><p>目录结构<br><img src=\"https://img-blog.csdnimg.cn/20210204123042550.png\" alt=\"在这里插入图片描述\"><br>这个目录结构比较简单，就三个python文件和一个files文件夹，main.py 是主程序，student.py是学生类，utils.py是工具类，files文件夹下用来存放导出的txt文件</p>\n<p>完整代码</p>\n<p>main.py</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> StudentManagement.student <span class=\"keyword\">import</span> Student</span><br><span class=\"line\"><span class=\"keyword\">from</span> StudentManagement.utils <span class=\"keyword\">import</span> *</span><br><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 主要数据结构</span></span><br><span class=\"line\"><span class=\"comment\"># 许多学生-students列表</span></span><br><span class=\"line\"><span class=\"comment\"># 单个学生-student对象</span></span><br><span class=\"line\"><span class=\"comment\"># 类的成员 姓名string 语数英成绩scores字典 平均分string</span></span><br><span class=\"line\"><span class=\"comment\"># student1 = Student(name,&#123;&#x27;math&#x27;:98,&#x27;English&#x27;:95,&#x27;Chinese&#x27;:93&#125;,average)</span></span><br><span class=\"line\"><span class=\"comment\"># 列表-学生对象-成员变量（3个）</span></span><br><span class=\"line\"><span class=\"comment\"># 主要就是列表的增删改查操作</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 将所有记录保存到文件模块</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">saveInfo</span>():</span></span><br><span class=\"line\">    path = <span class=\"string\">&#x27;./files/&#x27;</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> os.path.exists(path):</span><br><span class=\"line\">        os.mkdir(path)</span><br><span class=\"line\">    file_name = path + getCurrentTime() + <span class=\"string\">&#x27;.txt&#x27;</span></span><br><span class=\"line\">    <span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(file_name, <span class=\"string\">&#x27;w&#x27;</span>) <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">        f.write(<span class=\"string\">&#x27;\\t姓名\\t数学\\t英语\\t语文\\t平均分\\n&#x27;</span>)</span><br><span class=\"line\">        <span class=\"keyword\">for</span> student <span class=\"keyword\">in</span> students:</span><br><span class=\"line\">            <span class=\"comment\"># 格式化写入 其中的&gt;意思是“ 对齐到右边 ”，8是特定值的宽度</span></span><br><span class=\"line\">            f.write(<span class=\"string\">&#x27;&#123;:&gt;8&#125;&#123;:&gt;8&#125;&#123;:&gt;8&#125;&#123;:&gt;8&#125;&#123;:&gt;8&#125;\\n&#x27;</span>.<span class=\"built_in\">format</span>(student.name, <span class=\"built_in\">str</span>(student.scores[<span class=\"string\">&#x27;math&#x27;</span>]),</span><br><span class=\"line\">                                                         <span class=\"built_in\">str</span>(student.scores[<span class=\"string\">&#x27;English&#x27;</span>]), <span class=\"built_in\">str</span>(student.scores[<span class=\"string\">&#x27;Chinese&#x27;</span>]),</span><br><span class=\"line\">                                                         <span class=\"built_in\">str</span>(student.average)))</span><br><span class=\"line\">        f.close()</span><br><span class=\"line\"></span><br><span class=\"line\">    print(<span class=\"string\">&#x27;成绩已保存至文件夹&#x27;</span> + file_name)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 从文件中读入所有记录</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">readInfo</span>():</span></span><br><span class=\"line\">    path = <span class=\"built_in\">input</span>(<span class=\"string\">&#x27;请输入导入文件名，例如：d:\\\\xds\\score.txt：&#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> os.path.exists(path):</span><br><span class=\"line\">        print(<span class=\"string\">&#x27;文件不存在，导入失败&#x27;</span>)</span><br><span class=\"line\">        <span class=\"keyword\">return</span></span><br><span class=\"line\">    <span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(path,<span class=\"string\">&#x27;r&#x27;</span>) <span class=\"keyword\">as</span> file:</span><br><span class=\"line\">        students.clear()</span><br><span class=\"line\">        <span class=\"keyword\">for</span> line <span class=\"keyword\">in</span> file.readlines():</span><br><span class=\"line\">            line = line.strip(<span class=\"string\">&#x27;\\n&#x27;</span>)</span><br><span class=\"line\">            <span class=\"comment\"># print(line)</span></span><br><span class=\"line\">            <span class=\"comment\"># print(type(line))</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> <span class=\"string\">&#x27;姓名&#x27;</span> <span class=\"keyword\">in</span> line:</span><br><span class=\"line\">                <span class=\"keyword\">continue</span></span><br><span class=\"line\">            split = line.split()</span><br><span class=\"line\">            student = Student(split[<span class=\"number\">0</span>],&#123;<span class=\"string\">&#x27;math&#x27;</span>:split[<span class=\"number\">1</span>],<span class=\"string\">&#x27;English&#x27;</span>:split[<span class=\"number\">2</span>],<span class=\"string\">&#x27;Chinese&#x27;</span>:split[<span class=\"number\">3</span>]&#125;,split[<span class=\"number\">4</span>])</span><br><span class=\"line\">            students.append(student)</span><br><span class=\"line\">        print(<span class=\"string\">&#x27;已经成功从文件&#x27;</span>+path.split(<span class=\"string\">&#x27;.txt&#x27;</span>)[<span class=\"number\">0</span>].rsplit(<span class=\"string\">&#x27;/&#x27;</span>,<span class=\"number\">1</span>)[-<span class=\"number\">1</span>]+<span class=\"string\">&#x27;导入数据!!!&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 输入记录模块</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">inputRecord</span>():</span></span><br><span class=\"line\">    isKeep = <span class=\"string\">&#x27;y&#x27;</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span> (isKeep == <span class=\"string\">&#x27;y&#x27;</span>):</span><br><span class=\"line\">        <span class=\"keyword\">try</span>:</span><br><span class=\"line\">            print(<span class=\"string\">&#x27;\\n请按如下提示输入相关信息.\\n&#x27;</span>)</span><br><span class=\"line\">            name = <span class=\"built_in\">input</span>(<span class=\"string\">&#x27;请输入学生姓名:&#x27;</span>)</span><br><span class=\"line\">            <span class=\"comment\"># 保持主键name唯一</span></span><br><span class=\"line\">            isNameExist = isNameExists(name, students)</span><br><span class=\"line\">            <span class=\"keyword\">if</span> isNameExist:</span><br><span class=\"line\">                print(<span class=\"string\">&#x27;该学生已存在，请重新输入\\n&#x27;</span>)</span><br><span class=\"line\">                <span class=\"keyword\">continue</span></span><br><span class=\"line\">            print(<span class=\"string\">&#x27;请输入成绩&#x27;</span>)</span><br><span class=\"line\">            math = <span class=\"built_in\">float</span>(<span class=\"built_in\">input</span>(<span class=\"string\">&#x27;数学：&#x27;</span>))</span><br><span class=\"line\">            English = <span class=\"built_in\">float</span>(<span class=\"built_in\">input</span>(<span class=\"string\">&#x27;英语：&#x27;</span>))</span><br><span class=\"line\">            Chinese = <span class=\"built_in\">float</span>(<span class=\"built_in\">input</span>(<span class=\"string\">&#x27;语文：&#x27;</span>))</span><br><span class=\"line\">            <span class=\"comment\"># 平均分保留一位小数</span></span><br><span class=\"line\">            average = <span class=\"built_in\">round</span>((math + English + Chinese) / <span class=\"number\">3</span>, <span class=\"number\">1</span>)</span><br><span class=\"line\">            student = Student(name, &#123;<span class=\"string\">&#x27;math&#x27;</span>: math, <span class=\"string\">&#x27;English&#x27;</span>: English, <span class=\"string\">&#x27;Chinese&#x27;</span>: Chinese&#125;, average)</span><br><span class=\"line\">            <span class=\"comment\"># 分数超出范围</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> outRange(math) <span class=\"keyword\">or</span> outRange(English) <span class=\"keyword\">or</span> outRange(Chinese):</span><br><span class=\"line\">                print(<span class=\"string\">&#x27;存在非法数据，请重新输入&#x27;</span>)</span><br><span class=\"line\">                <span class=\"keyword\">continue</span></span><br><span class=\"line\">            <span class=\"comment\"># 新增</span></span><br><span class=\"line\">            students.append(student)</span><br><span class=\"line\">            print(<span class=\"string\">&#x27;新增一条记录!\\n&#x27;</span>)</span><br><span class=\"line\">            isKeep = <span class=\"built_in\">input</span>(<span class=\"string\">&#x27;是否继续添加记录（y/n）：&#x27;</span>)</span><br><span class=\"line\">        <span class=\"keyword\">except</span> ValueError <span class=\"keyword\">as</span> e:</span><br><span class=\"line\">            <span class=\"comment\"># 成绩必须为浮点数</span></span><br><span class=\"line\">            print(<span class=\"string\">&#x27;成绩类型错误，请重新输入!\\n&#x27;</span>)</span><br><span class=\"line\">            <span class=\"keyword\">continue</span></span><br><span class=\"line\">    <span class=\"comment\"># for student in students:</span></span><br><span class=\"line\">    <span class=\"comment\">#     student.print()</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 显示所有记录模块</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">printAllRecords</span>():</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"built_in\">len</span>(students) == <span class=\"number\">0</span>:</span><br><span class=\"line\">        print(<span class=\"string\">&#x27;很遗憾，空表中没有任何记录可供显示！&#x27;</span>)</span><br><span class=\"line\">        <span class=\"keyword\">return</span></span><br><span class=\"line\">    print(<span class=\"string\">&#x27;\\n******************显示所有记录*******************\\n&#x27;</span>)</span><br><span class=\"line\">    <span class=\"comment\"># 一个制表符t占4格</span></span><br><span class=\"line\">    print(<span class=\"string\">&#x27;\\t姓名\\t数学\\t英语\\t语文\\t平均分\\n&#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> student <span class=\"keyword\">in</span> students:</span><br><span class=\"line\">        student.print()</span><br><span class=\"line\">    print(<span class=\"string\">&#x27;************************************************&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 对所有记录进行排序模块</span></span><br><span class=\"line\"><span class=\"comment\"># 采用冒泡排序算法</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">sortAllRecords</span>():</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"built_in\">len</span>(students) == <span class=\"number\">0</span>:</span><br><span class=\"line\">        print(<span class=\"string\">&#x27;很遗憾，空表中没有任何记录可供排序！&#x27;</span>)</span><br><span class=\"line\">        <span class=\"keyword\">return</span></span><br><span class=\"line\">    lenth = <span class=\"built_in\">len</span>(students)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(lenth):</span><br><span class=\"line\">        <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>, lenth - i - <span class=\"number\">1</span>):</span><br><span class=\"line\">            <span class=\"keyword\">if</span> <span class=\"built_in\">float</span>(students[j].average) &lt; <span class=\"built_in\">float</span>(students[j + <span class=\"number\">1</span>].average):</span><br><span class=\"line\">                students[j], students[j + <span class=\"number\">1</span>] = students[j + <span class=\"number\">1</span>], students[j]</span><br><span class=\"line\">    print(<span class=\"string\">&#x27;已按平均分由高到低排序!\\n&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 按姓名查找记录并显示模块</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">queryByName</span>():</span></span><br><span class=\"line\">    name = <span class=\"built_in\">input</span>(<span class=\"string\">&#x27;请输入要查询的学生姓名：&#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> student <span class=\"keyword\">in</span> students:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> name <span class=\"keyword\">in</span> student.name:</span><br><span class=\"line\">            print(<span class=\"string\">&#x27;\\n*********************Found*********************\\n&#x27;</span>)</span><br><span class=\"line\">            print(<span class=\"string\">&#x27;\\t姓名\\t数学\\t英语\\t语文\\t平均分\\n&#x27;</span>)</span><br><span class=\"line\">            student.print()</span><br><span class=\"line\">            print(<span class=\"string\">&#x27;***********************************************\\n&#x27;</span>)</span><br><span class=\"line\">            <span class=\"keyword\">return</span></span><br><span class=\"line\">    print(<span class=\"string\">&#x27;您要查找的是&#x27;</span> + name + <span class=\"string\">&#x27;，很遗憾，查无此人！&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 插入记录模块</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">insertRecord</span>():</span></span><br><span class=\"line\">    length = <span class=\"built_in\">len</span>(students)</span><br><span class=\"line\">    print(<span class=\"string\">&#x27;当前列表长度为&#x27;</span> + <span class=\"built_in\">str</span>(length))</span><br><span class=\"line\">    index = <span class=\"built_in\">int</span>(<span class=\"built_in\">input</span>(<span class=\"string\">&#x27;请输入你要插入的位置(0-len)：&#x27;</span>))</span><br><span class=\"line\">    <span class=\"keyword\">if</span> index &gt;= <span class=\"number\">0</span> <span class=\"keyword\">and</span> index &lt;= length:</span><br><span class=\"line\">        <span class=\"comment\"># 插入操作</span></span><br><span class=\"line\">        print(<span class=\"string\">&#x27;\\n请按如下提示输入相关信息.\\n&#x27;</span>)</span><br><span class=\"line\">        name = <span class=\"built_in\">input</span>(<span class=\"string\">&#x27;请输入学生姓名:&#x27;</span>)</span><br><span class=\"line\">        <span class=\"comment\"># 保持主键name唯一</span></span><br><span class=\"line\">        isNameExist = isNameExists(name, students)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> isNameExist:</span><br><span class=\"line\">            print(<span class=\"string\">&#x27;该学生已存在，插入操作失败\\n&#x27;</span>)</span><br><span class=\"line\">        print(<span class=\"string\">&#x27;请输入成绩&#x27;</span>)</span><br><span class=\"line\">        math = <span class=\"built_in\">float</span>(<span class=\"built_in\">input</span>(<span class=\"string\">&#x27;数学：&#x27;</span>))</span><br><span class=\"line\">        English = <span class=\"built_in\">float</span>(<span class=\"built_in\">input</span>(<span class=\"string\">&#x27;英语：&#x27;</span>))</span><br><span class=\"line\">        Chinese = <span class=\"built_in\">float</span>(<span class=\"built_in\">input</span>(<span class=\"string\">&#x27;语文：&#x27;</span>))</span><br><span class=\"line\">        <span class=\"comment\"># 平均分保留一位小数</span></span><br><span class=\"line\">        average = <span class=\"built_in\">round</span>((math + English + Chinese) / <span class=\"number\">3</span>, <span class=\"number\">1</span>)</span><br><span class=\"line\">        student = Student(name, &#123;<span class=\"string\">&#x27;math&#x27;</span>: math, <span class=\"string\">&#x27;English&#x27;</span>: English, <span class=\"string\">&#x27;Chinese&#x27;</span>: Chinese&#125;, average)</span><br><span class=\"line\">        <span class=\"comment\"># 分数超出范围</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> outRange(math) <span class=\"keyword\">or</span> outRange(English) <span class=\"keyword\">or</span> outRange(Chinese):</span><br><span class=\"line\">            print(<span class=\"string\">&#x27;存在非法数据，插入操作失败&#x27;</span>)</span><br><span class=\"line\">        <span class=\"comment\"># 列表插入</span></span><br><span class=\"line\">        students.insert(index, student)</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        print(<span class=\"string\">&#x27;非法输入，请重新输入\\n&#x27;</span>)</span><br><span class=\"line\">        insertRecord()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 删除记录</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">deleteRecordById</span>():</span></span><br><span class=\"line\">    name = <span class=\"built_in\">input</span>(<span class=\"string\">&#x27;请输入你要删除的学生姓名：&#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> student <span class=\"keyword\">in</span> students:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> name <span class=\"keyword\">in</span> student.name:</span><br><span class=\"line\">            students.remove(student)</span><br><span class=\"line\">            print(<span class=\"string\">&#x27;删除成功！&#x27;</span>)</span><br><span class=\"line\">            <span class=\"keyword\">return</span></span><br><span class=\"line\">    print(<span class=\"string\">&#x27;您要删除的是&#x27;</span> + name + <span class=\"string\">&#x27;，很遗憾，查无此人！&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 菜单显示模块</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">menu</span>():</span></span><br><span class=\"line\">    print(<span class=\"string\">&quot;\\n         ***************主菜单**************\\n&quot;</span>)</span><br><span class=\"line\">    print(<span class=\"string\">&quot;             1. 输入记录\\n&quot;</span>)</span><br><span class=\"line\">    print(<span class=\"string\">&quot;             2. 显示所有记录\\n&quot;</span>)</span><br><span class=\"line\">    print(<span class=\"string\">&quot;             3. 对所有记录进行排序\\n&quot;</span>)</span><br><span class=\"line\">    print(<span class=\"string\">&quot;             4. 按姓名查找记录并显示\\n&quot;</span>)</span><br><span class=\"line\">    print(<span class=\"string\">&quot;             5. 插入记录\\n&quot;</span>)</span><br><span class=\"line\">    print(<span class=\"string\">&quot;             6. 删除记录\\n&quot;</span>)</span><br><span class=\"line\">    print(<span class=\"string\">&quot;             7. 将所有记录保存到文件\\n&quot;</span>)</span><br><span class=\"line\">    print(<span class=\"string\">&quot;             8. 从文件中读入所有记录\\n&quot;</span>)</span><br><span class=\"line\">    print(<span class=\"string\">&quot;             9. 退出\\n&quot;</span>)</span><br><span class=\"line\">    print(<span class=\"string\">&quot;         ***********************************\\n\\n&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\">    students = []</span><br><span class=\"line\">    print(<span class=\"string\">&#x27;               欢迎来到学生成绩管理系统&#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">while</span> <span class=\"literal\">True</span>:</span><br><span class=\"line\">        menu()</span><br><span class=\"line\">        choice = <span class=\"built_in\">int</span>(<span class=\"built_in\">input</span>(<span class=\"string\">&#x27;         请选择操作(1-9):&#x27;</span>))</span><br><span class=\"line\">        <span class=\"keyword\">if</span> choice == <span class=\"number\">1</span>:</span><br><span class=\"line\">            inputRecord()</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> choice == <span class=\"number\">2</span>:</span><br><span class=\"line\">            printAllRecords()</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> choice == <span class=\"number\">3</span>:</span><br><span class=\"line\">            sortAllRecords()</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> choice == <span class=\"number\">4</span>:</span><br><span class=\"line\">            queryByName()</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> choice == <span class=\"number\">5</span>:</span><br><span class=\"line\">            insertRecord()</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> choice == <span class=\"number\">6</span>:</span><br><span class=\"line\">            deleteRecordById()</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> choice == <span class=\"number\">7</span>:</span><br><span class=\"line\">            saveInfo()</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> choice == <span class=\"number\">8</span>:</span><br><span class=\"line\">            readInfo()</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> choice == <span class=\"number\">9</span>:</span><br><span class=\"line\">            exit()</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>student.py</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Student</span>(<span class=\"params\"><span class=\"built_in\">object</span></span>):</span></span><br><span class=\"line\">    <span class=\"comment\"># name String</span></span><br><span class=\"line\">    <span class=\"comment\"># score = [&#x27;math&#x27;:0,&#x27;English&#x27;:0,&#x27;Chinese&#x27;:0]</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 初始化函数</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__init__</span>(<span class=\"params\">self, name, scores, average</span>):</span></span><br><span class=\"line\">        self.name = name</span><br><span class=\"line\">        self.scores = scores</span><br><span class=\"line\">        self.average = average</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 输出函数</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">print</span>(<span class=\"params\">self</span>):</span></span><br><span class=\"line\">        print(<span class=\"string\">&#x27;&#123;:&gt;8&#125;&#123;:&gt;8&#125;&#123;:&gt;8&#125;&#123;:&gt;8&#125;&#123;:&gt;8&#125;\\n&#x27;</span>.<span class=\"built_in\">format</span>(self.name, <span class=\"built_in\">str</span>(self.scores[<span class=\"string\">&#x27;math&#x27;</span>]), <span class=\"built_in\">str</span>(self.scores[<span class=\"string\">&#x27;English&#x27;</span>]), <span class=\"built_in\">str</span>(self.scores[<span class=\"string\">&#x27;Chinese&#x27;</span>]),<span class=\"built_in\">str</span>(self.average)))</span><br></pre></td></tr></table></figure>\n\n<p>utils.py</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> time</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 按格式获取当前时间（精确到秒）</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">getCurrentTime</span>():</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span>(time.strftime(<span class=\"string\">&#x27;%Y年%m月%d日%H时%M分%S秒&#x27;</span>,time.localtime(time.time())))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 检测分数是否超出范围</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">outRange</span>(<span class=\"params\">number</span>):</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(number&gt;<span class=\"number\">100.0</span> <span class=\"keyword\">or</span> number&lt;<span class=\"number\">0.0</span>):</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查询name是否已经存在</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">isNameExists</span>(<span class=\"params\">name,students</span>):</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> student <span class=\"keyword\">in</span> students:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> student.name <span class=\"keyword\">in</span> name:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>./files/1.txt<br><img src=\"https://img-blog.csdnimg.cn/202102041235434.png\" alt=\"在这里插入图片描述\"></p>\n<h1 id=\"思路分析\"><a href=\"#思路分析\" class=\"headerlink\" title=\"思路分析\"></a>思路分析</h1><p>主要就是实现几个模块吧,各个模块之间相对独立，具体的模块代码在上面，就不一一赘述了</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\">    students = []</span><br><span class=\"line\">    print(<span class=\"string\">&#x27;               欢迎来到学生成绩管理系统&#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">while</span> <span class=\"literal\">True</span>:</span><br><span class=\"line\">    \t<span class=\"comment\"># 显示菜单\t</span></span><br><span class=\"line\">        menu()</span><br><span class=\"line\">        choice = <span class=\"built_in\">int</span>(<span class=\"built_in\">input</span>(<span class=\"string\">&#x27;         请选择操作(1-9):&#x27;</span>))</span><br><span class=\"line\">        <span class=\"keyword\">if</span> choice == <span class=\"number\">1</span>:</span><br><span class=\"line\">        \t<span class=\"comment\"># 输入记录模块</span></span><br><span class=\"line\">            inputRecord()</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> choice == <span class=\"number\">2</span>:</span><br><span class=\"line\">        \t<span class=\"comment\"># 显示所有记录模块</span></span><br><span class=\"line\">            printAllRecords()</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> choice == <span class=\"number\">3</span>:</span><br><span class=\"line\">         \t<span class=\"comment\"># 对所有记录进行排序模块 </span></span><br><span class=\"line\">            sortAllRecords()</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> choice == <span class=\"number\">4</span>:</span><br><span class=\"line\">        \t<span class=\"comment\"># 按姓名查找记录并显示模块</span></span><br><span class=\"line\">            queryByName()</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> choice == <span class=\"number\">5</span>:</span><br><span class=\"line\">        \t<span class=\"comment\"># 插入记录模块</span></span><br><span class=\"line\">            insertRecord()</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> choice == <span class=\"number\">6</span>:</span><br><span class=\"line\">        \t<span class=\"comment\"># 删除记录模块</span></span><br><span class=\"line\">            deleteRecordById()</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> choice == <span class=\"number\">7</span>:</span><br><span class=\"line\">        \t<span class=\"comment\"># 将所有记录保存到文件模块</span></span><br><span class=\"line\">            saveInfo()</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> choice == <span class=\"number\">8</span>:</span><br><span class=\"line\">        \t<span class=\"comment\"># 从文件中读入所有记录模块</span></span><br><span class=\"line\">            readInfo()</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> choice == <span class=\"number\">9</span>:</span><br><span class=\"line\">        \t<span class=\"comment\"># 退出系统模块</span></span><br><span class=\"line\">            exit()</span><br></pre></td></tr></table></figure>\n\n<p>主要数据结构-学生类</p>\n<p>许多学生-students列表存储<br>单个学生-student对象存储<br>类的成员 姓名string 语数英成绩scores字典 平均分string<br>类的方法 print()<br>例如  <code>student = Student(&#39;小明&#39;,&#123;&#39;math&#39;:98,&#39;English&#39;:95,&#39;Chinese&#39;:92&#125;,95)</code></p>\n<p>说到python版的相对简单，我深有体会。<br>就拿插入模块来说，python一句 <code>students.insert(index, student)</code>搞定，而用c的话，链表需要查找到指定位置，然后插入。而链表最麻烦的就是查找，插入则相对简单。</p>\n<h1 id=\"效果展示\"><a href=\"#效果展示\" class=\"headerlink\" title=\"效果展示\"></a>效果展示</h1><p>主界面<br><img src=\"https://img-blog.csdnimg.cn/2021020412421387.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzgyNzM3Ng==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>显示所有记录<br><img src=\"https://img-blog.csdnimg.cn/20210204124230134.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzgyNzM3Ng==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>导入数据<br><img src=\"https://img-blog.csdnimg.cn/20210204124824623.png\" alt=\"在这里插入图片描述\"><br>添加记录<br><img src=\"https://img-blog.csdnimg.cn/20210204125003946.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzgyNzM3Ng==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>按平均分由高到低排序<br><img src=\"https://img-blog.csdnimg.cn/20210204125445900.png\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20210204125503338.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzgyNzM3Ng==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>插入记录<br><img src=\"https://img-blog.csdnimg.cn/20210204125619107.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzgyNzM3Ng==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<p><img src=\"https://img-blog.csdnimg.cn/20210204125603636.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzgyNzM3Ng==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>删除记录<br><img src=\"https://img-blog.csdnimg.cn/20210204125643560.png\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20210204125656976.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzgyNzM3Ng==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>保存数据到文件<br><img src=\"https://img-blog.csdnimg.cn/20210204125719539.png\" alt=\"在这里插入图片描述\"><br>文件中<br><img src=\"https://img-blog.csdnimg.cn/20210204125739204.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzgyNzM3Ng==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>退出系统<br><img src=\"https://img-blog.csdnimg.cn/20210204125810816.png\" alt=\"在这里插入图片描述\"></p>\n<h1 id=\"项目总结\"><a href=\"#项目总结\" class=\"headerlink\" title=\"项目总结\"></a>项目总结</h1><p>这个项目呢，虽然比较小，但是知识点都比较全。python的基本数据结构以及各种输入输出都有，俗话说“麻雀虽小，五脏俱全”，所以说比较适合python入门。写这个项目大概花了我一天时间，中间出过各种各样的bug，但好在基本都已解决。<br>我也会在gitee上传这个项目，嫌复制粘贴麻烦的可以直接克隆仓库或者下载压缩包。这个项目的特点就是命令行界面+文件，考察了许多基本的文件操作，命令行无图形界面意味着你可以自己写一个输入输出，发挥自己的想象吧。</p>\n<p>附上gitee链接<a href=\"https://gitee.com/bugui_he0415/student-scores-management\">Python学生成绩管理系统文件命令行版</a></p>\n","categories":["Python"],"tags":["python"]},{"title":"【可视化爬虫实战】使用python+selenium爬取学校教务网学生成绩","url":"/2021/02/26/%E3%80%90%E5%8F%AF%E8%A7%86%E5%8C%96%E7%88%AC%E8%99%AB%E5%AE%9E%E6%88%98%E3%80%91%E4%BD%BF%E7%94%A8python+selenium%E7%88%AC%E5%8F%96%E5%AD%A6%E6%A0%A1%E6%95%99%E5%8A%A1%E7%BD%91%E5%AD%A6%E7%94%9F%E6%88%90%E7%BB%A9/","content":"<h1 id=\"写作缘起\"><a href=\"#写作缘起\" class=\"headerlink\" title=\"写作缘起\"></a>写作缘起</h1><p>南墙最近学习爬虫了解到了一个好玩的玩意儿—selenium自动化测试工具，Selenium是一个用于Web应用程序测试的工具，它直接运行在浏览器中，就像真正的用户在操作一样。这样就可以跳过js、加密等反扒手段。来了个新的东西必须实战一下，所以南墙就想着去实现一个登录学校教务网的小程序。</p>\n<h1 id=\"上代码\"><a href=\"#上代码\" class=\"headerlink\" title=\"上代码\"></a>上代码</h1><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> time</span><br><span class=\"line\"><span class=\"keyword\">from</span> selenium <span class=\"keyword\">import</span> webdriver<span class=\"comment\">#驱动浏览器</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> selenium.webdriver.support.wait <span class=\"keyword\">import</span> WebDriverWait <span class=\"comment\">#等待页面加载完毕 寻找某些元素</span></span><br><span class=\"line\">browser = webdriver.Chrome()</span><br><span class=\"line\"><span class=\"comment\"># 最大化窗口</span></span><br><span class=\"line\">browser.maximize_window()</span><br><span class=\"line\">wait = WebDriverWait(browser, <span class=\"number\">10</span>)  <span class=\"comment\"># 设置selenium等待浏览器加载完毕的最大等待时间</span></span><br><span class=\"line\">url = <span class=\"string\">&#x27;http://kdjw.hnust.edu.cn/&#x27;</span></span><br><span class=\"line\">browser.get(url)</span><br><span class=\"line\"><span class=\"comment\"># 账号输入框</span></span><br><span class=\"line\">username = browser.find_element_by_xpath(<span class=\"string\">&#x27;//*[@id=&quot;userAccount&quot;]&#x27;</span>)</span><br><span class=\"line\">username.send_keys(<span class=\"string\">&#x27;填写自己的账号&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\"># 密码输入框</span></span><br><span class=\"line\">password = browser.find_element_by_xpath(<span class=\"string\">&#x27;//*[@id=&quot;userPassword&quot;]&#x27;</span>)</span><br><span class=\"line\">password.send_keys(<span class=\"string\">&#x27;填写自己的密码&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\"># 登录按钮</span></span><br><span class=\"line\">login_btn = browser.find_element_by_id(<span class=\"string\">&#x27;btn-login&#x27;</span>)</span><br><span class=\"line\">login_btn.click()</span><br><span class=\"line\">print(<span class=\"string\">&#x27;开始查询&#x27;</span>)</span><br><span class=\"line\">time.sleep(<span class=\"number\">5</span>)</span><br><span class=\"line\"><span class=\"comment\"># 学籍成绩</span></span><br><span class=\"line\">scores = browser.find_element_by_xpath(<span class=\"string\">&#x27;//*[@id=&quot;accordion&quot;]/li[3]/div&#x27;</span>)</span><br><span class=\"line\">scores.click()</span><br><span class=\"line\">time.sleep(<span class=\"number\">2</span>)</span><br><span class=\"line\"><span class=\"comment\"># 我的成绩</span></span><br><span class=\"line\">myscores = browser.find_element_by_xpath(<span class=\"string\">&#x27;//*[@id=&quot;accordion&quot;]/li[3]/ul/li[3]/div&#x27;</span>)</span><br><span class=\"line\">myscores.click()</span><br><span class=\"line\">time.sleep(<span class=\"number\">2</span>)</span><br><span class=\"line\"><span class=\"comment\"># 课程成绩查询</span></span><br><span class=\"line\">course_scores = browser.find_element_by_xpath(<span class=\"string\">&#x27;//*[@id=&quot;NEW_XSD_XJCJ_WDCJ_KCCJCX&quot;]&#x27;</span>)</span><br><span class=\"line\">course_scores.click()</span><br><span class=\"line\">time.sleep(<span class=\"number\">2</span>)</span><br><span class=\"line\"><span class=\"comment\"># 收起左侧的箭头(&lt;)</span></span><br><span class=\"line\">left_arrow = browser.find_element_by_xpath(<span class=\"string\">&#x27;/html/body/div/div[1]/div/div/label/i&#x27;</span>).click()</span><br><span class=\"line\">time.sleep(<span class=\"number\">2</span>)</span><br><span class=\"line\"><span class=\"comment\"># 屏幕截图</span></span><br><span class=\"line\">path = <span class=\"string\">&#x27;./测试.png&#x27;</span></span><br><span class=\"line\">browser.save_screenshot(path)</span><br><span class=\"line\">print(<span class=\"string\">&#x27;截图已保存至&#x27;</span>,path)</span><br><span class=\"line\">browser.quit()</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h1 id=\"思路分析\"><a href=\"#思路分析\" class=\"headerlink\" title=\"思路分析\"></a>思路分析</h1><h2 id=\"下载selenium库\"><a href=\"#下载selenium库\" class=\"headerlink\" title=\"下载selenium库\"></a>下载selenium库</h2><p>使用pip install selenium命令下载selenium库，可以看到我这里已经下载好了<br><img src=\"https://img-blog.csdnimg.cn/20210210120804221.png\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"安装浏览器驱动\"><a href=\"#安装浏览器驱动\" class=\"headerlink\" title=\"安装浏览器驱动\"></a>安装浏览器驱动</h2><p>selenium要控制浏览器还需要下载对应浏览器的driver驱动，下面以chrome浏览器为例。参照下文</p>\n<p><a href=\"https://blog.csdn.net/qq_40604853/article/details/81388078?utm_medium=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-1.control&depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-1.control\">Window 下配置ChromeDriver(简单4步完成）</a></p>\n<h3 id=\"温馨提示\"><a href=\"#温馨提示\" class=\"headerlink\" title=\"温馨提示\"></a>温馨提示</h3><p><strong>我的driver.exe是放在python-script目录下的，跟上文不太一样<br>所以你们可能要配置browser = webdriver.Chrome()参数中的路径，这个也说不定。<br>还有就是一定要下载对对应驱动版本。</strong></p>\n<p>在代码运行阶段，如果看到浏览器显示如下就表示你配置成功了<br><img src=\"https://img-blog.csdnimg.cn/20210210130902174.png\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"使用selenium库\"><a href=\"#使用selenium库\" class=\"headerlink\" title=\"使用selenium库\"></a>使用selenium库</h2><p>这里可能要介绍一下selenium的一些基本使用方法</p>\n<h3 id=\"访问网页\"><a href=\"#访问网页\" class=\"headerlink\" title=\"访问网页\"></a>访问网页</h3><p>get方式</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">browser = webdriver.Chrome()</span><br><span class=\"line\">url = <span class=\"string\">&#x27;http://kdjw.hnust.edu.cn/&#x27;</span></span><br><span class=\"line\">browser.get(url)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"获取标签（这里使用xpath）\"><a href=\"#获取标签（这里使用xpath）\" class=\"headerlink\" title=\"获取标签（这里使用xpath）\"></a>获取标签（这里使用xpath）</h3><p>也可以使用id、class、selector等等，不过xpath看起来复杂，其实就是一条路径，格式类似于windows文件绝对路径。而且操作容易，不想自己写的小伙伴可以选中标签右键 copy -&gt; copy xpath<br><code>myscores = browser.find_element_by_xpath(&#39;//*[@id=&quot;accordion&quot;]/li[3]/ul/li[3]/div&#39;)</code></p>\n<h3 id=\"模拟浏览器行为\"><a href=\"#模拟浏览器行为\" class=\"headerlink\" title=\"模拟浏览器行为\"></a>模拟浏览器行为</h3><p>获取标签之后我们就需要对标签进行单击、拖拽、双击等等浏览器模拟行为，本文用到了click(左键单击)、send_keys(设置内容)、save_screenshot(截图)这几个。</p>\n<h4 id=\"具体使用如下：\"><a href=\"#具体使用如下：\" class=\"headerlink\" title=\"具体使用如下：\"></a>具体使用如下：</h4><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 账号输入框</span></span><br><span class=\"line\">username = browser.find_element_by_xpath(<span class=\"string\">&#x27;//*[@id=&quot;userAccount&quot;]&#x27;</span>)</span><br><span class=\"line\">username.send_keys(<span class=\"string\">&#x27;填写自己的账号&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\"># 密码输入框</span></span><br><span class=\"line\">password = browser.find_element_by_xpath(<span class=\"string\">&#x27;//*[@id=&quot;userPassword&quot;]&#x27;</span>)</span><br><span class=\"line\">password.send_keys(<span class=\"string\">&#x27;填写自己的密码&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\"># 登录按钮</span></span><br><span class=\"line\">login_btn = browser.find_element_by_id(<span class=\"string\">&#x27;btn-login&#x27;</span>)</span><br><span class=\"line\">login_btn.click()</span><br></pre></td></tr></table></figure>\n<h3 id=\"保存截图\"><a href=\"#保存截图\" class=\"headerlink\" title=\"保存截图\"></a>保存截图</h3><p>等待查询页面结果显示出来之后就可以保存截图了<br>使用<code>browser.save_screenshot(path)</code>方法</p>\n<h1 id=\"效果展示\"><a href=\"#效果展示\" class=\"headerlink\" title=\"效果展示\"></a>效果展示</h1><p>终端运行结果，可以看到截图保存路径<br><img src=\"https://img-blog.csdnimg.cn/20210210122445468.png\" alt=\"在这里插入图片描述\"><br>打开图片<br><img src=\"https://img-blog.csdnimg.cn/20210210124456754.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzgyNzM3Ng==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h1 id=\"写在最后\"><a href=\"#写在最后\" class=\"headerlink\" title=\"写在最后\"></a>写在最后</h1><h2 id=\"对selenium的总结\"><a href=\"#对selenium的总结\" class=\"headerlink\" title=\"对selenium的总结\"></a>对selenium的总结</h2><p>selenium可以让我们轻易越过一些比较难破解的反爬虫措施，比如js、加密等等，是一种很好的可视化工具，可以用来开发可视化爬虫。<br>当然没有完美无缺的东西，selenium也存在一些缺点，比如爬取速度慢，ajax动态加载、css动画渲染需要一定的时间，这个时间长达几秒，对于一些不要求高性能的爬虫这无关紧要。但是对于一个要爬去几万条数据的爬虫而言，这显然不合适。</p>\n<h3 id=\"对于第二点\"><a href=\"#对于第二点\" class=\"headerlink\" title=\"对于第二点\"></a>对于第二点</h3><p>对于第二点，由于加载速度和代码执行速度不在一个量级上，为了避免页面刷新太慢以至于代码执行时找不到标签，建议加上time.sleep(2)休眠函数。不加可能出现以下报错<code>element not interactable</code>（元素不可交互）<br><img src=\"https://img-blog.csdnimg.cn/20210210133412464.png\" alt=\"在这里插入图片描述\"><br><strong>还有一种复杂点的，但是时间利用方面可能更好。</strong><br>代码中元素进行获取的时候查看是否已经加载出来，等待元素加载可以使用显式等待<code>element=WebDriverWait(browser,20,0.5).until(EC.presence_of_element_located((By.XPATH,&#39;//*[@id=&quot;app&quot;]/div&#39;)))</code></p>\n<h2 id=\"项目总结\"><a href=\"#项目总结\" class=\"headerlink\" title=\"项目总结\"></a>项目总结</h2><p>本项目爬取教务网学生成绩就是属于前者的一种情况，只需要爬取一个人的数据量当然小，可以作为一个工具来选课查成绩等等，简单快捷，最重要的是不用再去输入繁琐的账号密码操作。</p>\n","categories":["爬虫"],"tags":["python","selenium","爬虫"]},{"title":"【爬虫实战】python爬取虎牙直播间封面美女图片","url":"/2021/02/26/%E3%80%90%E7%88%AC%E8%99%AB%E5%AE%9E%E6%88%98%E3%80%91python%E7%88%AC%E5%8F%96%E8%99%8E%E7%89%99%E7%9B%B4%E6%92%AD%E9%97%B4%E5%B0%81%E9%9D%A2%E7%BE%8E%E5%A5%B3%E5%9B%BE%E7%89%87/","content":"<p>﻿# Python爬虫爬取虎牙直播间封面美女图片</p>\n<h1 id=\"写作缘起\"><a href=\"#写作缘起\" class=\"headerlink\" title=\"写作缘起\"></a>写作缘起</h1><p><em>这篇文章主要是介绍如何使用python爬虫来爬取虎牙直播间的封面，我发现星秀封面上的小姐姐都挺漂亮的，这不得保存下来好好欣赏</em></p>\n<h1 id=\"上代码\"><a href=\"#上代码\" class=\"headerlink\" title=\"上代码\"></a>上代码</h1><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"></span><br><span class=\"line\"># 获取虎牙直播封面图片、链接、标题、主播名</span><br><span class=\"line\">headers = &#123;</span><br><span class=\"line\">    <span class=\"string\">&#x27;user-agent&#x27;</span>: <span class=\"string\">&#x27;Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/61.0.3163.79 Safari/537.36&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;Connection&#x27;</span>: <span class=\"string\">&#x27;keep-alive&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;Accept&#x27;</span>: <span class=\"string\">&#x27;text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;Referer&#x27;</span>: <span class=\"string\">&#x27;https://www.huya.com/&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;Accept-Encoding&#x27;</span>: <span class=\"string\">&#x27;gzip, deflate, sdch&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;Accept-Language&#x27;</span>: <span class=\"string\">&#x27;en-US,en;q=0.8&#x27;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">url = <span class=\"string\">&#x27;https://www.huya.com/g/xingxiu&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">response = requests.get(url,headers=headers)</span><br><span class=\"line\"></span><br><span class=\"line\">html = response.text</span><br><span class=\"line\"></span><br><span class=\"line\"># 直播间图片，图片url</span><br><span class=\"line\">pics = re.findall(r<span class=\"string\">&#x27;&lt;img class=&quot;pic&quot;.*?data-original=&quot;(.*?)&quot; src.*?&gt;&#x27;</span>,html)</span><br><span class=\"line\"># 直播间链接</span><br><span class=\"line\">hrefs = re.findall(r<span class=\"string\">&#x27;&lt;a href=&quot;(.*?)&quot; class=&quot;title&quot;&#x27;</span>,html)</span><br><span class=\"line\"># 直播间标题</span><br><span class=\"line\">titles = re.findall(r<span class=\"string\">&#x27;&lt;a.*?class=&quot;title&quot;.*?title=&quot;(.*?)&quot;&#x27;</span>,html)</span><br><span class=\"line\"># 直播间主播名字</span><br><span class=\"line\">names = re.findall(r<span class=\"string\">&#x27;&lt;i class=&quot;nick&quot;.*?&gt;(.*?)&lt;/i&gt;&#x27;</span>,html)</span><br><span class=\"line\">items = []</span><br><span class=\"line\"></span><br><span class=\"line\"># 用字典保存直播间信息</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(len(pics)):</span><br><span class=\"line\">    item = &#123;<span class=\"string\">&#x27;pic&#x27;</span>: <span class=\"string\">&#x27;&#x27;</span>, <span class=\"string\">&#x27;href&#x27;</span>:<span class=\"string\">&#x27;&#x27;</span>,<span class=\"string\">&#x27;name&#x27;</span>: <span class=\"string\">&#x27;&#x27;</span>, <span class=\"string\">&#x27;title&#x27;</span>: <span class=\"string\">&#x27;&#x27;</span>&#125;</span><br><span class=\"line\">    # 加match主要是去除无效链接</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(re.match(r<span class=\"string\">&#x27;https://&#x27;</span>,pics[i])):</span><br><span class=\"line\">        item[<span class=\"string\">&#x27;pic&#x27;</span>] = pics[i]</span><br><span class=\"line\">        item[<span class=\"string\">&#x27;href&#x27;</span>] = hrefs[i]</span><br><span class=\"line\">        item[<span class=\"string\">&#x27;name&#x27;</span>] = names[i]</span><br><span class=\"line\">        item[<span class=\"string\">&#x27;title&#x27;</span>] = titles[i]</span><br><span class=\"line\">        items.append(item)</span><br><span class=\"line\"></span><br><span class=\"line\"># 下载图片</span><br><span class=\"line\"># url图片直接访问网址然后获取二进制格式即可，如requests.get(url=pic).content</span><br><span class=\"line\"><span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> items:</span><br><span class=\"line\">\t# 输出一下字典</span><br><span class=\"line\">    print(item)</span><br><span class=\"line\">    # 设置文件路径/huya/xxx.jpg</span><br><span class=\"line\">    _dir = <span class=\"string\">&#x27;./huya&#x27;</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> not os.path.exists(_dir):</span><br><span class=\"line\">        os.mkdir(_dir)</span><br><span class=\"line\">    # 设置图片文件名、图片内容是访问url得来的</span><br><span class=\"line\">    name = item[<span class=\"string\">&#x27;name&#x27;</span>]</span><br><span class=\"line\">    path = <span class=\"string\">&#x27;./huya/&#x27;</span> + name +<span class=\"string\">&#x27;.jpg&#x27;</span></span><br><span class=\"line\">    pic = item[<span class=\"string\">&#x27;pic&#x27;</span>]</span><br><span class=\"line\">    # 二进制图片文件</span><br><span class=\"line\">    content = requests.get(pic).content</span><br><span class=\"line\">    <span class=\"keyword\">with</span> open(path,<span class=\"string\">&#x27;wb&#x27;</span>) <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">        f.write(content)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"效果展示\"><a href=\"#效果展示\" class=\"headerlink\" title=\"效果展示\"></a>效果展示</h1><p><img src=\"https://img-blog.csdnimg.cn/20210127223348136.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzgyNzM3Ng==,size_16,color_FFFFFF,t_70\" alt=\"截图\"><br><img src=\"https://img-blog.csdnimg.cn/20210127231017625.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzgyNzM3Ng==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h1 id=\"思路分析\"><a href=\"#思路分析\" class=\"headerlink\" title=\"思路分析\"></a>思路分析</h1><p><em>由于虎牙貌似没用反爬虫，运用简单的爬虫手段就可以了；<br>主要分三步：<br>一是从html文档中解析出封面图片的url、主播id、直播间标题、直播间链接等信息，并用字典保存下来，运用到请求库requests、正则库re，如下</em><br><img src=\"https://img-blog.csdnimg.cn/20210127225004514.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzgyNzM3Ng==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">response = requests.get(url,headers=headers)</span><br><span class=\"line\"></span><br><span class=\"line\">html = response.text</span><br><span class=\"line\"></span><br><span class=\"line\"># 直播间图片，图片url</span><br><span class=\"line\">pics = re.findall(r<span class=\"string\">&#x27;&lt;img class=&quot;pic&quot;.*?data-original=&quot;(.*?)&quot; src.*?&gt;&#x27;</span>,html)</span><br><span class=\"line\"># 直播间链接</span><br><span class=\"line\">hrefs = re.findall(r<span class=\"string\">&#x27;&lt;a href=&quot;(.*?)&quot; class=&quot;title&quot;&#x27;</span>,html)</span><br><span class=\"line\"># 直播间标题</span><br><span class=\"line\">titles = re.findall(r<span class=\"string\">&#x27;&lt;a.*?class=&quot;title&quot;.*?title=&quot;(.*?)&quot;&#x27;</span>,html)</span><br><span class=\"line\"># 直播间主播名字</span><br><span class=\"line\">names = re.findall(r<span class=\"string\">&#x27;&lt;i class=&quot;nick&quot;.*?&gt;(.*?)&lt;/i&gt;&#x27;</span>,html)</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"># 用字典保存直播间信息</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(len(pics)):</span><br><span class=\"line\">    item = &#123;<span class=\"string\">&#x27;pic&#x27;</span>: <span class=\"string\">&#x27;&#x27;</span>, <span class=\"string\">&#x27;href&#x27;</span>:<span class=\"string\">&#x27;&#x27;</span>,<span class=\"string\">&#x27;name&#x27;</span>: <span class=\"string\">&#x27;&#x27;</span>, <span class=\"string\">&#x27;title&#x27;</span>: <span class=\"string\">&#x27;&#x27;</span>&#125;</span><br><span class=\"line\">    # 加match主要是去除无效链接</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(re.match(r<span class=\"string\">&#x27;https://&#x27;</span>,pics[i])):</span><br><span class=\"line\">        item[<span class=\"string\">&#x27;pic&#x27;</span>] = pics[i]</span><br><span class=\"line\">        item[<span class=\"string\">&#x27;href&#x27;</span>] = hrefs[i]</span><br><span class=\"line\">        item[<span class=\"string\">&#x27;name&#x27;</span>] = names[i]</span><br><span class=\"line\">        item[<span class=\"string\">&#x27;title&#x27;</span>] = titles[i]</span><br><span class=\"line\">        items.append(item)</span><br></pre></td></tr></table></figure>\n<p><em>二是创建文件路径，在当前路径下创建一个名为huya的文件夹，然后把获取到的主播id作为图片jpg文件名，使用系统库os来操作文件</em></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"># 设置文件路径/huya/xxx.jpg</span><br><span class=\"line\">_dir = <span class=\"string\">&#x27;./huya&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> not os.path.exists(_dir):</span><br><span class=\"line\">    os.mkdir(_dir)</span><br><span class=\"line\"># 设置图片文件名、图片内容是访问url得来的</span><br><span class=\"line\">name = item[<span class=\"string\">&#x27;name&#x27;</span>]</span><br><span class=\"line\">path = <span class=\"string\">&#x27;./huya/&#x27;</span> + name +<span class=\"string\">&#x27;.jpg&#x27;</span></span><br></pre></td></tr></table></figure>\n<p><em>三是遍历字典，访问图片的url，获取二进制格式content，并write到jpg文件中</em></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">pic = item[<span class=\"string\">&#x27;pic&#x27;</span>]</span><br><span class=\"line\"># 二进制图片文件</span><br><span class=\"line\">content = requests.get(pic).content</span><br><span class=\"line\"><span class=\"keyword\">with</span> open(path,<span class=\"string\">&#x27;wb&#x27;</span>) <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">    f.write(content)</span><br></pre></td></tr></table></figure>\n\n","categories":["爬虫"],"tags":["python","爬虫"]},{"title":"【爬虫实战】手把手教你使用python爬取美女图片","url":"/2021/02/26/%E3%80%90%E7%88%AC%E8%99%AB%E5%AE%9E%E6%88%98%E3%80%91%E6%89%8B%E6%8A%8A%E6%89%8B%E6%95%99%E4%BD%A0%E4%BD%BF%E7%94%A8python%E7%88%AC%E5%8F%96%E7%BE%8E%E5%A5%B3%E5%9B%BE%E7%89%87/","content":"<h1 id=\"写作缘起\"><a href=\"#写作缘起\" class=\"headerlink\" title=\"写作缘起\"></a>写作缘起</h1><p>用python爬虫实现的图片资源下载器，一页页下载图片过于缓慢，当我们要欣赏一些好看的图片时一页页翻太复杂了，干脆写一个图片下载器</p>\n<h1 id=\"上代码\"><a href=\"#上代码\" class=\"headerlink\" title=\"上代码\"></a>上代码</h1><p><em>有点小长</em></p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"><span class=\"keyword\">import</span> time</span><br><span class=\"line\"><span class=\"keyword\">from</span> bs4 <span class=\"keyword\">import</span> BeautifulSoup</span><br><span class=\"line\"><span class=\"keyword\">from</span> requests <span class=\"keyword\">import</span> RequestException</span><br><span class=\"line\"><span class=\"keyword\">from</span> tqdm <span class=\"keyword\">import</span> tqdm</span><br><span class=\"line\"><span class=\"keyword\">import</span> random</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 梳理：文件结构 ./meizitu2/xiezhen/美少女写真图集/1.jpg-max_page.jpg</span></span><br><span class=\"line\"><span class=\"comment\">#               当前目录-&gt;类型文件夹-&gt;图组文件夹-&gt;图片文件</span></span><br><span class=\"line\"><span class=\"comment\">#               now-&gt;class_name-&gt;pages_name-&gt;page_name</span></span><br><span class=\"line\"></span><br><span class=\"line\">headers = &#123;</span><br><span class=\"line\">    <span class=\"string\">&#x27;User-Agent&#x27;</span>: <span class=\"string\">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.138 Safari/537.36&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;Connection&#x27;</span>: <span class=\"string\">&#x27;close&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;Accept&#x27;</span>: <span class=\"string\">&#x27;text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;Referer&#x27;</span>: <span class=\"string\">&#x27;http://www.quanshuwang.com/&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;Accept-Encoding&#x27;</span>: <span class=\"string\">&#x27;gzip, deflate, sdch&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;Accept-Language&#x27;</span>:<span class=\"string\">&#x27;zh-CN,zh;q=0.9&#x27;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">user_agent_list = [</span><br><span class=\"line\">    <span class=\"string\">&quot;Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.106 Safari/537.36&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;Mozilla/5.0 (Windows NT 10.0; …) Gecko/20100101 Firefox/61.0&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/64.0.3282.186 Safari/537.36&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.62 Safari/537.36&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/45.0.2454.101 Safari/537.36&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0)&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;Mozilla/5.0 (Macintosh; U; PPC Mac OS X 10.5; en-US; rv:1.9.2.15) Gecko/20110303 Firefox/3.6.15&quot;</span>,</span><br><span class=\"line\">    ]</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 从列表中移除含param字符串的项</span></span><br><span class=\"line\"><span class=\"comment\"># 思路是查找然后保存下标，最后再一起删除</span></span><br><span class=\"line\"><span class=\"comment\"># 如果直接删除的话，会导致列表访问越界</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">remove_some</span>(<span class=\"params\">lists, param</span>):</span></span><br><span class=\"line\">    move = []</span><br><span class=\"line\">    i = <span class=\"built_in\">len</span>(lists)</span><br><span class=\"line\">    <span class=\"comment\"># 查找</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(i):</span><br><span class=\"line\">        <span class=\"keyword\">if</span> param <span class=\"keyword\">in</span> lists[j]:</span><br><span class=\"line\">            move.append(lists[j])</span><br><span class=\"line\">    <span class=\"comment\"># 删除</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> m <span class=\"keyword\">in</span> move:</span><br><span class=\"line\">        lists.remove(m)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> lists</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># url去重</span></span><br><span class=\"line\"><span class=\"comment\"># 列表去重</span></span><br><span class=\"line\"><span class=\"comment\"># 思路是创建一个空列表，然后遍历旧列表加入不重复的元素</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">doubleclear</span>(<span class=\"params\">li</span>):</span></span><br><span class=\"line\">    new_li = []</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> li:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> i <span class=\"keyword\">not</span> <span class=\"keyword\">in</span> new_li:</span><br><span class=\"line\">            new_li.append(i)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> new_li</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 参数1 链接列表 每一个链接对应一个图组</span></span><br><span class=\"line\"><span class=\"comment\"># 参数2 图片类型</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">download</span>(<span class=\"params\">first_page_list,class_name</span>):</span></span><br><span class=\"line\">    <span class=\"comment\"># 下载每个图组的第一页</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> tqdm(<span class=\"built_in\">range</span>(<span class=\"built_in\">len</span>(first_page_list))):</span><br><span class=\"line\">        first_page_url = first_page_list[i]</span><br><span class=\"line\">        <span class=\"comment\"># 重置path</span></span><br><span class=\"line\">        path = <span class=\"string\">&#x27;./meizitu2/&#x27;</span> + class_name</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> os.path.exists(path):</span><br><span class=\"line\">            os.makedirs(path)</span><br><span class=\"line\">        max_page,path = downloadFirstPage(first_page_url,path)</span><br><span class=\"line\">        <span class=\"comment\"># 第一页下载完成 准备下载其他页</span></span><br><span class=\"line\">        <span class=\"comment\"># print(max_page+&#x27;:&#x27;+path)</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">2</span>,<span class=\"built_in\">int</span>(max_page)+<span class=\"number\">1</span>):</span><br><span class=\"line\">            downloadOtherPages(first_page_url,i,path)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取页面信息</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_one_page</span>(<span class=\"params\">url</span>):</span></span><br><span class=\"line\">    <span class=\"keyword\">try</span>:</span><br><span class=\"line\">        res = requests.get(url,headers=headers)</span><br><span class=\"line\">        res.encoding = res.apparent_encoding</span><br><span class=\"line\">        <span class=\"keyword\">if</span> res.status_code == <span class=\"number\">200</span>:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> res</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">None</span></span><br><span class=\"line\">    <span class=\"keyword\">except</span> RequestException:</span><br><span class=\"line\">        print(<span class=\"string\">&quot;获取失败&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 下载图片</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">saveImages</span>(<span class=\"params\">content, path,num</span>):</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> os.path.exists(path):</span><br><span class=\"line\">        os.mkdir(path)</span><br><span class=\"line\">    path = path+<span class=\"string\">&#x27;/&#x27;</span>+<span class=\"built_in\">str</span>(num)+<span class=\"string\">&#x27;.jpg&#x27;</span></span><br><span class=\"line\">    <span class=\"comment\"># print(&#x27;下载到&#x27;+path)</span></span><br><span class=\"line\">    <span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(path,<span class=\"string\">&#x27;wb&#x27;</span>) <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">        f.write(content)</span><br><span class=\"line\">        f.close()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 下载其他页</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">downloadOtherPages</span>(<span class=\"params\">first_page_url, i, path</span>):</span></span><br><span class=\"line\">    url =<span class=\"string\">&#x27;https://www.tupianzj.com&#x27;</span>+first_page_url.rsplit(<span class=\"string\">&#x27;.&#x27;</span>,<span class=\"number\">1</span>)[<span class=\"number\">0</span>]+<span class=\"string\">&#x27;_&#x27;</span>+<span class=\"built_in\">str</span>(i)+<span class=\"string\">&#x27;.html&#x27;</span></span><br><span class=\"line\">    <span class=\"comment\"># print(&#x27;第&#x27;+str(i)+&#x27;页url为：&#x27;+url)</span></span><br><span class=\"line\">    html = get_one_page(url).text</span><br><span class=\"line\">    <span class=\"comment\"># 获取图片url并下载</span></span><br><span class=\"line\">    img_url = re.findall(<span class=\"string\">&#x27;src=&quot;(.*?)&quot; id=&quot;bigpicimg&quot;&#x27;</span>, html)[<span class=\"number\">0</span>]</span><br><span class=\"line\">    img = get_one_page(img_url).content</span><br><span class=\"line\">    saveImages(img, path, i)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 下载第一页</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">downloadFirstPage</span>(<span class=\"params\">first_page_url,path</span>):</span></span><br><span class=\"line\">    <span class=\"comment\"># print(&#x27;原路径&#x27;+path+&#x27;\\n&#x27;)</span></span><br><span class=\"line\">    first_page_url = <span class=\"string\">&#x27;https://www.tupianzj.com&#x27;</span>+first_page_url</span><br><span class=\"line\">    <span class=\"comment\"># print(first_page_url + &quot;下载每个图组的第一页&quot;)</span></span><br><span class=\"line\">    html = get_one_page(first_page_url).text</span><br><span class=\"line\">    <span class=\"comment\"># 获取标题</span></span><br><span class=\"line\">    title = re.findall(<span class=\"string\">&#x27;&lt;h1&gt;(.*?)&lt;/h1&gt;&#x27;</span>, html)[<span class=\"number\">0</span>]</span><br><span class=\"line\">    <span class=\"comment\"># print(title)</span></span><br><span class=\"line\">    <span class=\"comment\"># 获取最大页</span></span><br><span class=\"line\">    max_page = re.findall(<span class=\"string\">&#x27;&lt;a.*?&gt;共(.*?)页: &lt;/a&gt;&#x27;</span>, html)[<span class=\"number\">0</span>]</span><br><span class=\"line\">    <span class=\"comment\"># print(max_page)</span></span><br><span class=\"line\">    <span class=\"comment\"># 获取图片url并下载</span></span><br><span class=\"line\">    img_url = re.findall(<span class=\"string\">&#x27;src=&quot;(.*?)&quot; id=&quot;bigpicimg&quot;&#x27;</span>, html)[<span class=\"number\">0</span>]</span><br><span class=\"line\">    img = get_one_page(img_url).content</span><br><span class=\"line\">    path = path+<span class=\"string\">&#x27;/&#x27;</span>+title</span><br><span class=\"line\">    <span class=\"comment\"># print(path+&#x27; 第一张图&#x27;)</span></span><br><span class=\"line\">    saveImages(img,path,<span class=\"number\">1</span>)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> max_page,path</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\">    headers[<span class=\"string\">&#x27;User-Agent&#x27;</span>] = random.choice(user_agent_list)</span><br><span class=\"line\">    isKeep = <span class=\"string\">&#x27;y&#x27;</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span> isKeep == <span class=\"string\">&#x27;y&#x27;</span>:</span><br><span class=\"line\">        print(<span class=\"string\">&#x27;1.清纯 2.性感 3.古装\\n4.艺术 5.车模 6.丝袜 &#x27;</span>)</span><br><span class=\"line\">        choice = <span class=\"built_in\">int</span>(<span class=\"built_in\">input</span>(<span class=\"string\">&#x27;请输入你想要下载的图片类型(填序号)：&#x27;</span>))</span><br><span class=\"line\">        class_list =[<span class=\"string\">&#x27;xiezhen/&#x27;</span>,<span class=\"string\">&#x27;xinggan/&#x27;</span>,<span class=\"string\">&#x27;guzhuang/&#x27;</span>,<span class=\"string\">&#x27;yishu/&#x27;</span>,<span class=\"string\">&#x27;chemo/&#x27;</span>,<span class=\"string\">&#x27;siwa/&#x27;</span>]</span><br><span class=\"line\">        class_url = <span class=\"string\">&#x27;https://www.tupianzj.com/meinv/&#x27;</span>+<span class=\"built_in\">str</span>(class_list[choice-<span class=\"number\">1</span>])</span><br><span class=\"line\">        classes = class_url.split(<span class=\"string\">&#x27;com&#x27;</span>,<span class=\"number\">1</span>)[<span class=\"number\">1</span>]</span><br><span class=\"line\">        <span class=\"comment\"># print(classes)</span></span><br><span class=\"line\">        res = requests.get(class_url,headers=headers)</span><br><span class=\"line\">        res.encoding=res.apparent_encoding</span><br><span class=\"line\">        html = res.text</span><br><span class=\"line\">        <span class=\"comment\"># print(html)</span></span><br><span class=\"line\">        soup = BeautifulSoup(html,<span class=\"string\">&#x27;html.parser&#x27;</span>)</span><br><span class=\"line\">        <span class=\"comment\"># print(soup)</span></span><br><span class=\"line\">        <span class=\"comment\"># 图组第一页url</span></span><br><span class=\"line\">        first_page_list = soup.select(<span class=\"string\">&#x27;div .list_con_box a&#x27;</span>)</span><br><span class=\"line\">        first_page_list = re.findall(<span class=\"string\">r&#x27;&lt;a href=&quot;(.*?)&quot;&#x27;</span>,<span class=\"built_in\">str</span>(first_page_list))</span><br><span class=\"line\">        <span class=\"comment\"># 去掉无关的url链接，格式都是/meinv/这样的，刚好是类型</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> link <span class=\"keyword\">in</span> first_page_list:</span><br><span class=\"line\">            <span class=\"keyword\">if</span> link == classes:</span><br><span class=\"line\">                first_page_list.remove(link)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 去掉含&#x27;list&#x27;的无用连接</span></span><br><span class=\"line\">        first_page_list = remove_some(first_page_list,<span class=\"string\">&#x27;list&#x27;</span>)</span><br><span class=\"line\">        <span class=\"comment\"># 去掉重复的url链接</span></span><br><span class=\"line\">        first_page_list = doubleclear(first_page_list)</span><br><span class=\"line\">        print(<span class=\"string\">&#x27;要爬取的链接列表：&#x27;</span>+<span class=\"built_in\">str</span>(first_page_list))</span><br><span class=\"line\">        <span class=\"comment\"># 图片类型</span></span><br><span class=\"line\">        class_name = classes.split(<span class=\"string\">&#x27;/&#x27;</span>,-<span class=\"number\">1</span>)[-<span class=\"number\">2</span>]</span><br><span class=\"line\">        print(class_name) <span class=\"comment\">#xinggan 性感类型</span></span><br><span class=\"line\">        <span class=\"comment\"># 下载模块</span></span><br><span class=\"line\">        download(first_page_list,class_name)</span><br><span class=\"line\">        print(<span class=\"string\">&#x27;图片爬取完成&#x27;</span>)</span><br><span class=\"line\">        isKeep = <span class=\"built_in\">input</span>(<span class=\"string\">&#x27;是否继续下载（y/n）：&#x27;</span>)</span><br><span class=\"line\">        print(<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n<h1 id=\"思路分析\"><a href=\"#思路分析\" class=\"headerlink\" title=\"思路分析\"></a>思路分析</h1><p> <strong>梳理：文件结构 ./meizitu2/xiezhen/美少女写真图集/1.jpg-max_page.jpg<br>             当前目录-&gt;类型文件夹-&gt;图组文件夹-&gt;图片文件<br>              now-&gt;class_name-&gt;pages_name-&gt;page_name</strong></p>\n<p>上面是图片的大概结构，首先在首页爬取每个图组的第一页图片所在的url，如下<br><img src=\"https://img-blog.csdnimg.cn/202102011906580.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzgyNzM3Ng==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>这还不是能直接下载的图片，需要访问img下的src属性的链接，以二进制保存图片，如下<br><img src=\"https://img-blog.csdnimg.cn/20210201190928628.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzgyNzM3Ng==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/2021020119111820.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzgyNzM3Ng==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>这样才算下载好了单张图片<br>关于如何解析就不详细说了，这个看正则、selector、bs4的知识就知道了<br>接下来要做的是把每个图组的所有照片全部保存到一个以首页标题命名的文件夹。具体思路如下：<br><img src=\"https://img-blog.csdnimg.cn/20210201191533756.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzgyNzM3Ng==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20210201191622861.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzgyNzM3Ng==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>通过比较我们能够发现规律，第一张图的url拼凑一个number可以得到后面所有页的url 比如第七页可以得到是  <code>&quot;https://www.tupianzj.com/meinv/20200728/214784_&quot;+str(7)+&quot;.html&quot;</code>,而且我们能够在第一页提取到图组的最大页数。这样通过一个循环就能访问所有图片了</p>\n<p>经过整理，我给所有图片分了几个类型（网站现成的），通过输入数字选定相应的类型我们就可以依据自己的喜好下载了。<br><img src=\"https://img-blog.csdnimg.cn/20210201192119734.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzgyNzM3Ng==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h1 id=\"效果展示\"><a href=\"#效果展示\" class=\"headerlink\" title=\"效果展示\"></a>效果展示</h1><p>爬取到的图片<br><img src=\"https://img-blog.csdnimg.cn/20210201192341294.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzgyNzM3Ng==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h1 id=\"写在最后\"><a href=\"#写在最后\" class=\"headerlink\" title=\"写在最后\"></a>写在最后</h1><p>本程序采用的单线程，下载速度比较缓慢，为了及时看到进度，我做了进度条模块，通过下载引用tqdm模块就可以。比较好用方便。使用方法就是在一个循环里套上，如 <code>for i in tqdm(range(len(first_page_list))):</code></p>\n<p>之后看能不能把.py文件打包成.exe文件，然后再修改下存储路径就可以实现对非专业人士的用户友好体验了。</p>\n","categories":["爬虫"],"tags":["python","爬虫"]},{"title":"【笔记】版本控制工具Git基础知识大全","url":"/2021/02/26/%E3%80%90%E7%AC%94%E8%AE%B0%E3%80%91%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6%E5%B7%A5%E5%85%B7Git%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E5%A4%A7%E5%85%A8/","content":"<h1 id=\"一、-写在前面\"><a href=\"#一、-写在前面\" class=\"headerlink\" title=\"一、 写在前面\"></a>一、 写在前面</h1><p>　　最近学习了Git（<strong>分布式版本控制系统</strong>）这个强大的工具，自己也算是有点小小的收获吧，在这里写出来作为学习笔记！<br>　　Git的版本控制像一颗树一样，可以有很多不同的分支，然后每一次commit都会产生一个更小的分支，版本回溯就像是寻找父亲节点一样，不同的分支代表了项目库不同的版本，正所谓“版本控制”！“分布式”是指它可以由多地多人共同协作完成一个项目，我感觉是这个。</p>\n<h1 id=\"二、Git简介\"><a href=\"#二、Git简介\" class=\"headerlink\" title=\"二、Git简介\"></a>二、Git简介</h1><p>　　首先Git是一款免费、开源的分布式版本控制系统，用于敏捷高效地处理任何或小或大的项目。Git的读音为/gɪt/。 Git是一个开源的分布式版本控制系统，用以有效、高速的处理从很小到非常大的项目版本管理。</p>\n<h1 id=\"三、GitBash下载\"><a href=\"#三、GitBash下载\" class=\"headerlink\" title=\"三、GitBash下载\"></a>三、GitBash下载</h1><ol>\n<li>GitBash 是一款好用的软件，通过类似命令行的操作来让我们对自己的代码仓库进行版本控制，<a href=\"https://git-scm.com/download/win\"><strong>下载地址点击这里</strong></a>如果在自己的浏览器中下载不了的，可以按F12开发者工具打开网页源码,找到下载链接，然后复制链接迅雷打开下载，速度很快的。<br><img src=\"https://img-blog.csdnimg.cn/20200210183302967.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzgyNzM3Ng==,size_16,color_FFFFFF,t_70\" alt=\"download\">　　　　　　　　　　　　　　　</li>\n</ol>\n<p> <strong>打开网页源码,找到下载链接</strong></p>\n<p><img src=\"https://img-blog.csdnimg.cn/2020021018344220.png\" alt=\"获取链接地址\">　　　　　　 　　　<strong>复制链接迅雷打开下载</strong><br><img src=\"https://img-blog.csdnimg.cn/20200210184019507.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzgyNzM3Ng==,size_16,color_FFFFFF,t_70#pic_center\" alt=\"在这里插入图片描述\"></p>\n<p>  <strong>默认路径设置</strong> ：把起始位置改为你想要的初始位置，比如上图是d:\\GitHub,这样操作起来比较方便，如果你要建一个库，就可以在起始位置下直接输入了，不用写一大串的绝对路径了呢。   <img src=\"https://img-blog.csdnimg.cn/2020021018363162.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzgyNzM3Ng==,size_16,color_FFFFFF,t_70#pic_center\" alt=\"设置默认路径\"></p>\n<p>​     </p>\n<h1 id=\"四、如何建一个本地仓库\"><a href=\"#四、如何建一个本地仓库\" class=\"headerlink\" title=\"四、如何建一个本地仓库\"></a>四、如何建一个本地仓库</h1><p> 　　　（１）进入GitBash。<br>     　　（２）如果已经有项目文件直接找到路径 <em>cd +文件名</em>  打开。<br> <img src=\"https://img-blog.csdnimg.cn/20200210183842426.png\" alt=\"打开文件\"><br>    　　（３）也可以用命令 <em>mkdir + 文件名</em> 在当前目录下新建一个然后cd打开。　<img src=\"https://img-blog.csdnimg.cn/20200210183752687.png\" alt=\"新建文件\"><br>    　　（４）<em>git init</em> (初始化)，看到弹出 Initialized empty Git repository in D:/GitHub/test/.git/ 字样时，<br>就说明你成功了，我们可以看到下面还弹出了一行代码，其中master表示位于主分支，这也体现了它的版本控制。<br><img src=\"https://img-blog.csdnimg.cn/20200210184245755.png\" alt=\"初始化\"><br>　　（５）此时可以进入test这个文件，在目录下会看到一个隐藏文件 .git ，里面是一些系统配置，不要动它就好了。<br><img src=\"https://img-blog.csdnimg.cn/20200210184334796.png\" alt=\".git文件\"><br>　　（６）仓库建好之后要添加代码直接把文件存在这个目录下。\n　\n　</p>\n<h1 id=\"五、如何连接远程仓库，以GitHub为例\"><a href=\"#五、如何连接远程仓库，以GitHub为例\" class=\"headerlink\" title=\"五、如何连接远程仓库，以ＧitＨub为例\"></a>五、如何连接远程仓库，以ＧitＨub为例</h1><p><strong>1.首先在github上建立远程仓库</strong></p>\n<p> <img src=\"https://img-blog.csdnimg.cn/20200210192722344.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzgyNzM3Ng==,size_16,color_FFFFFF,t_70#pic_center\" alt=\"在这里插入图片描述\"></p>\n<p><strong>2.然后复制ssh或者https(这里以ssh为例)</strong></p>\n<p> <img src=\"https://img-blog.csdnimg.cn/20200210192959580.png#pic_center\" alt=\"在这里插入图片描述\"></p>\n<p><strong>3.github输入命令</strong></p>\n<p><img src=\"https://img-blog.csdnimg.cn/20200210204511932.png\" alt=\"在这里插入图片描述\"><br>（这里仓库名显示为‘-’，有可能是中文字符不显示，路径不能出现中文字符）</p>\n<p>进入-文件</p>\n<p>  <img src=\"https://img-blog.csdnimg.cn/20200210204639738.png\" alt=\"在这里插入图片描述\"><br>可以看到刚刚在GitHub上创建的一个README.md文件<br>  <img src=\"https://img-blog.csdnimg.cn/20200210204658100.png\" alt=\"在这里插入图片描述\"><br>  <img src=\"https://img-blog.csdnimg.cn/20200210204912904.png\" alt=\"在这里插入图片描述\"></p>\n<h1 id=\"六、GitBash另外的一些基本操作\"><a href=\"#六、GitBash另外的一些基本操作\" class=\"headerlink\" title=\"六、GitBash另外的一些基本操作\"></a>六、GitBash另外的一些基本操作</h1><p> ~　　<br> 　　<strong>git remote</strong> :关联远程仓库 　<br>       例如：git remote add origin <a href=\"mailto:&#x67;&#105;&#x74;&#64;&#103;&#105;&#x74;&#x68;&#117;&#98;&#46;&#x63;&#x6f;&#x6d;\">&#x67;&#105;&#x74;&#64;&#103;&#105;&#x74;&#x68;&#117;&#98;&#46;&#x63;&#x6f;&#x6d;</a>:yourname/youremail.git<br>～<br> 　　<strong>git log</strong>:查看修改日志，当我们对本地仓库进行了不理想的修改，怎么办呢？这时git的优势就体现出来了，依据版本号可以回溯到以前的任何版本，对于一些大型项目的开发是非常方便的<br> 　　<br>　　<strong>git status</strong> :查看当前库的状态<br>　　如：在主分支master、没有commit记录<br>　　<img src=\"https://img-blog.csdnimg.cn/2020021021112798.png\" alt=\"在这里插入图片描述\"><br>　　<br>　　<strong>git push</strong> :同步，把本地库的所有内容推送到远程库上<br>　　例如：git push -u origin master<br>　　<br>　　<strong>git commit</strong> :更新本地仓库信息 ‘m’代表message<br>　　例如：git commit -m “first commit”<br>　　<img src=\"https://img-blog.csdnimg.cn/20200210220313615.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzgyNzM3Ng==,size_16,color_FFFFFF,t_70#pic_center\" alt=\"在这里插入图片描述\"><br>　　<strong>git clone</strong> :克隆远程库比如github上的,如下图 本来以为是同步更新（远程主动更新本地），clone hello_world 后发现在hello-world 目录下又复制了一个hello-world git库,这也就是说只能在远程克隆，不能在远程更新后返回本地，而github又支持直接在界面上修改代码，对我来说这是一个坑（一般人做项目肯定不会在GitHub上直接修改，是我多虑了）。划重点–<br>　　格式：git clone ssh/https<br>　　<img src=\"https://img-blog.csdnimg.cn/20200210221001957.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzgyNzM3Ng==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>　　<br>　　<strong>git reset</strong>:版本回溯<br>　　如：git reset – hard +版本号前八位<br>　　先查log（日志），按照版本号可以回溯到任意时刻。<br>　　git reset – hard HEAD^ （返回上一次commit前）<br>　　这篇讲的很透彻 <a href=\"https://www.jianshu.com/p/c2ec5f06cf1a\">https://www.jianshu.com/p/c2ec5f06cf1a</a></p>\n<p><img src=\"https://img-blog.csdnimg.cn/20200210221640762.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzgyNzM3Ng==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20200210221658384.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzgyNzM3Ng==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>　　<strong>总结：</strong> 如果是自己做项目开发，可以现在本地建立仓库，然后再推送到远程<br>　　如果是借鉴别人的优秀代码，可以先fork再clone到本地</p>\n<h1 id=\"七、其他一些软件也具有版本控制功能\"><a href=\"#七、其他一些软件也具有版本控制功能\" class=\"headerlink\" title=\"七、其他一些软件也具有版本控制功能\"></a>七、其他一些软件也具有版本控制功能</h1><p>~<br>　　不过要连接git，例如github提供的桌面版Github Desktop还有python IDE pycharm，界面操作虽然爽而且简单直观，但是原生的gitbash可以在不同的os上操作，可移植性更强，他不香吗hhh</p>\n<h1 id=\"八、GIT-传输和加密机制\"><a href=\"#八、GIT-传输和加密机制\" class=\"headerlink\" title=\"八、GIT 传输和加密机制\"></a>八、GIT 传输和加密机制</h1><p>～<br>　　采用非对称加密方式，公钥和密钥 ；也可使用https协议在本地仓库和远程仓库之间传输信息 对于如何绑定本地GIT和GitHub这个不详细介绍了，因为忘记截图了。  可以参考 <a href=\"http://blog.csdn.net/acmman/article/details/77621253\">http://blog.csdn.net/acmman/article/details/77621253</a></p>\n","categories":["Git"],"tags":["笔记","Git"]},{"title":"【爬虫实战】手把手教你使用python爬取网络小说","url":"/2021/02/26/%E3%80%90%E7%88%AC%E8%99%AB%E5%AE%9E%E6%88%98%E3%80%91%E6%89%8B%E6%8A%8A%E6%89%8B%E6%95%99%E4%BD%A0%E4%BD%BF%E7%94%A8python%E7%88%AC%E5%8F%96%E7%BD%91%E7%BB%9C%E5%B0%8F%E8%AF%B4/","content":"<h1 id=\"写作缘起\"><a href=\"#写作缘起\" class=\"headerlink\" title=\"写作缘起\"></a>写作缘起</h1><p><em>南墙最近发现自己常用的看小说网站多了许多广告，果然商业化的现今网上几无净土啊，便决定自己写个小说下载器，这样看小说贼爽</em></p>\n<h1 id=\"上代码\"><a href=\"#上代码\" class=\"headerlink\" title=\"上代码\"></a>上代码</h1><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> random</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"><span class=\"keyword\">from</span> bs4 <span class=\"keyword\">import</span> BeautifulSoup</span><br><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"><span class=\"keyword\">import</span> time</span><br><span class=\"line\"><span class=\"comment\"># 构造请求头</span></span><br><span class=\"line\">headers = &#123;</span><br><span class=\"line\">    <span class=\"string\">&#x27;User-Agent&#x27;</span>: <span class=\"string\">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.138 Safari/537.36&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;Connection&#x27;</span>: <span class=\"string\">&#x27;close&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;Accept&#x27;</span>: <span class=\"string\">&#x27;text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;Referer&#x27;</span>: <span class=\"string\">&#x27;http://www.quanshuwang.com/&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;Accept-Encoding&#x27;</span>: <span class=\"string\">&#x27;gzip, deflate, sdch&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;Accept-Language&#x27;</span>:<span class=\"string\">&#x27;zh-CN,zh;q=0.9&#x27;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 代理列表</span></span><br><span class=\"line\">user_agent_list = [</span><br><span class=\"line\">    <span class=\"string\">&quot;Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.106 Safari/537.36&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;Mozilla/5.0 (Windows NT 10.0; …) Gecko/20100101 Firefox/61.0&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/64.0.3282.186 Safari/537.36&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.62 Safari/537.36&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/45.0.2454.101 Safari/537.36&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0)&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;Mozilla/5.0 (Macintosh; U; PPC Mac OS X 10.5; en-US; rv:1.9.2.15) Gecko/20110303 Firefox/3.6.15&quot;</span>,</span><br><span class=\"line\">    ]</span><br><span class=\"line\"><span class=\"comment\"># 随机选取一个代理，总是使用同一个容易被封</span></span><br><span class=\"line\">headers[<span class=\"string\">&#x27;User-Agent&#x27;</span>] = random.choice(user_agent_list)</span><br><span class=\"line\"><span class=\"comment\"># print(headers[&#x27;User-Agent&#x27;])</span></span><br><span class=\"line\"><span class=\"comment\"># print(type(random.choice(user_agent_list)))</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">download</span>(<span class=\"params\">url</span>):</span></span><br><span class=\"line\">    <span class=\"comment\"># url = &#x27;http://www.quanshuwang.com/book/44/44683/15379610.html&#x27;</span></span><br><span class=\"line\">    res = requests.get(url,headers=headers)</span><br><span class=\"line\">    res.encoding =<span class=\"string\">&#x27;gbk&#x27;</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> res.status_code != <span class=\"number\">200</span>:</span><br><span class=\"line\">        print(<span class=\"string\">&quot;爬取失败&quot;</span>)</span><br><span class=\"line\">\t</span><br><span class=\"line\">    html = res.text</span><br><span class=\"line\">    soup = BeautifulSoup(html,<span class=\"string\">&#x27;html.parser&#x27;</span>)</span><br><span class=\"line\">    <span class=\"comment\"># 获取内容</span></span><br><span class=\"line\">    content = soup.find(<span class=\"string\">&#x27;div&#x27;</span>,<span class=\"built_in\">id</span>=<span class=\"string\">&#x27;content&#x27;</span>)</span><br><span class=\"line\">    <span class=\"comment\"># print(content)</span></span><br><span class=\"line\">    <span class=\"comment\"># 获取标题</span></span><br><span class=\"line\">    title = re.findall(<span class=\"string\">r&#x27;&lt;/script&gt;.*?(.*?)&lt;br/&gt;&#x27;</span>,<span class=\"built_in\">str</span>(content))[<span class=\"number\">0</span>].strip()</span><br><span class=\"line\">    content = <span class=\"built_in\">str</span>(content).replace(<span class=\"string\">&#x27;&lt;br/&gt;&#x27;</span>,<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\">    <span class=\"comment\"># print(content)</span></span><br><span class=\"line\">    content = content[content.find(<span class=\"string\">&#x27;\\n&#x27;</span>)+<span class=\"number\">1</span>:]</span><br><span class=\"line\">    content = content.split(<span class=\"string\">&#x27;&lt;s&#x27;</span>,<span class=\"number\">1</span>)[<span class=\"number\">0</span>]</span><br><span class=\"line\">    content = content.replace(<span class=\"string\">&#x27;\\n&#x27;</span>,<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"comment\"># 设置下载路径</span></span><br><span class=\"line\">    path = <span class=\"string\">&#x27;./book/&#x27;</span>+title+<span class=\"string\">&#x27;.txt&#x27;</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> os.path.exists(<span class=\"string\">&#x27;./book&#x27;</span>):</span><br><span class=\"line\">        os.mkdir(<span class=\"string\">&#x27;./book&#x27;</span>)</span><br><span class=\"line\">    <span class=\"comment\"># 下载到文件</span></span><br><span class=\"line\">    <span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(path,<span class=\"string\">&#x27;w&#x27;</span>) <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">        f.write(content)</span><br><span class=\"line\">        f.close()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 程序入口</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ ==<span class=\"string\">&quot;__main__&quot;</span>:</span><br><span class=\"line\">    num = <span class=\"built_in\">int</span>(<span class=\"built_in\">input</span>(<span class=\"string\">&quot;请输入想要下载的章节数目：&quot;</span>))</span><br><span class=\"line\">    i = <span class=\"number\">0</span>  <span class=\"comment\"># 已下载章节数</span></span><br><span class=\"line\">    j = <span class=\"number\">0</span>  <span class=\"comment\"># 偏移量，一般来说加1 但存在无效链接 需要加n（n&gt;1）</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span> i &lt; num:</span><br><span class=\"line\">        location = <span class=\"number\">15379609</span> + j</span><br><span class=\"line\">        url = <span class=\"string\">&#x27;http://www.quanshuwang.com/book/44/44683/&#x27;</span> + <span class=\"built_in\">str</span>(location) + <span class=\"string\">&#x27;.html&#x27;</span></span><br><span class=\"line\">        <span class=\"keyword\">try</span>:</span><br><span class=\"line\">            download(url)</span><br><span class=\"line\">        <span class=\"keyword\">except</span> Exception <span class=\"keyword\">as</span> e: <span class=\"comment\"># 捕获异常并打印异常信息，跳过该url</span></span><br><span class=\"line\">            print(url+<span class=\"string\">&#x27;  &#x27;</span>+<span class=\"built_in\">str</span>(e))</span><br><span class=\"line\">            j = j + <span class=\"number\">1</span></span><br><span class=\"line\">            <span class=\"keyword\">continue</span></span><br><span class=\"line\">        print(url+<span class=\"string\">&#x27;  第&#x27;</span>+<span class=\"built_in\">str</span>(i)+<span class=\"string\">&#x27;章下载完成&#x27;</span>)</span><br><span class=\"line\">        <span class=\"comment\"># 后移下载下一章节</span></span><br><span class=\"line\">        i = i + <span class=\"number\">1</span></span><br><span class=\"line\">        j = j + <span class=\"number\">1</span></span><br><span class=\"line\">        time.sleep(<span class=\"number\">6</span>)</span><br><span class=\"line\">    print(<span class=\"string\">&#x27;**下载完成**&#x27;</span>)</span><br><span class=\"line\">    </span><br></pre></td></tr></table></figure>\n<h1 id=\"思路分析\"><a href=\"#思路分析\" class=\"headerlink\" title=\"思路分析\"></a>思路分析</h1><p><strong>思路分三步：</strong><br><strong>第一步 分析结构</strong></p>\n<p><img src=\"https://img-blog.csdnimg.cn/20210131180406269.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzgyNzM3Ng==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><em>这个的结构比较简单，文字内容都在id=”content”的div元素下，为了方便起见，使用bs4库，用 <code>content = soup.find(&#39;div&#39;,id=&#39;content&#39;)</code>这段代码便可获取文字内容，然后再对字符串进行数据清洗，去空格符，去换行符等操作。同时把文章标题提取出来作为txt文件名。</em></p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">soup = BeautifulSoup(html,<span class=\"string\">&#x27;html.parser&#x27;</span>)</span><br><span class=\"line\">   <span class=\"comment\"># 获取内容</span></span><br><span class=\"line\">   content = soup.find(<span class=\"string\">&#x27;div&#x27;</span>,<span class=\"built_in\">id</span>=<span class=\"string\">&#x27;content&#x27;</span>)</span><br><span class=\"line\">   <span class=\"comment\"># print(content)</span></span><br><span class=\"line\">   <span class=\"comment\"># 获取标题</span></span><br><span class=\"line\">   title = re.findall(<span class=\"string\">r&#x27;&lt;/script&gt;.*?(.*?)&lt;br/&gt;&#x27;</span>,<span class=\"built_in\">str</span>(content))[<span class=\"number\">0</span>].strip()</span><br><span class=\"line\">   content = <span class=\"built_in\">str</span>(content).replace(<span class=\"string\">&#x27;&lt;br/&gt;&#x27;</span>,<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\">   <span class=\"comment\"># print(content)</span></span><br><span class=\"line\">   content = content[content.find(<span class=\"string\">&#x27;\\n&#x27;</span>)+<span class=\"number\">1</span>:]</span><br><span class=\"line\">   content = content.split(<span class=\"string\">&#x27;&lt;s&#x27;</span>,<span class=\"number\">1</span>)[<span class=\"number\">0</span>]</span><br><span class=\"line\">   content = content.replace(<span class=\"string\">&#x27;\\n&#x27;</span>,<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\">   </span><br></pre></td></tr></table></figure>\n<p><strong>第二步 通过观察发现章节url之间的规律</strong><br><img src=\"https://img-blog.csdnimg.cn/20210131181041217.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzgyNzM3Ng==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/20210131181127167.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzgyNzM3Ng==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br><em>从上面可以发现相邻章节的url链接只有后缀数字不同，而且是递增1，得到第1章的后缀便可以推断出后面所有章节的url（其实后面通过大批量的下载发现有无效链接，比如55应该是第45章，但第45章是到57、58了，说明中间有空缺，但是并不影响，我们通过累加下载的有效章节数依旧可以控制总章节数）</em></p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">i=<span class=\"number\">0</span>  <span class=\"comment\"># 已下载章节数</span></span><br><span class=\"line\">j = <span class=\"number\">0</span>  <span class=\"comment\"># 偏移量，一般来说加1 但存在无效链接 需要加n（n&gt;1）</span></span><br><span class=\"line\"><span class=\"keyword\">while</span> i &lt; num:</span><br><span class=\"line\">    location = <span class=\"number\">15379609</span> + j</span><br><span class=\"line\">    url = <span class=\"string\">&#x27;http://www.quanshuwang.com/book/44/44683/&#x27;</span> + <span class=\"built_in\">str</span>(location) + <span class=\"string\">&#x27;.html&#x27;</span></span><br><span class=\"line\">    <span class=\"keyword\">try</span>:</span><br><span class=\"line\">        download(url)</span><br></pre></td></tr></table></figure>\n<p><strong>第三步 下载</strong><br><em>这个相对而言就比较简单了，直接上代码吧</em></p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 下载到本地</span></span><br><span class=\"line\">   <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> os.path.exists(<span class=\"string\">&#x27;./book&#x27;</span>):</span><br><span class=\"line\">       os.mkdir(<span class=\"string\">&#x27;./book&#x27;</span>)</span><br><span class=\"line\">   path = <span class=\"string\">&#x27;./book/&#x27;</span>+title+<span class=\"string\">&#x27;.txt&#x27;</span></span><br><span class=\"line\">   <span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(path,<span class=\"string\">&#x27;w&#x27;</span>) <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">       f.write(content)</span><br><span class=\"line\">       f.close()</span><br></pre></td></tr></table></figure>\n<p><em>后来发现其实可以在主界面把所有章节的url提取出来放入一个列表中，然后下载这样就比较方便了</em></p>\n<h1 id=\"效果展示\"><a href=\"#效果展示\" class=\"headerlink\" title=\"效果展示\"></a>效果展示</h1><p><em>运行效果</em><br><img src=\"https://img-blog.csdnimg.cn/20210131200400989.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzgyNzM3Ng==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<p><em>打开txt看小说咯</em><br><img src=\"https://img-blog.csdnimg.cn/20210131200510319.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzgyNzM3Ng==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<p><em>噔噔噔噔，终于可以爽快地看小说了</em></p>\n<h1 id=\"写在最后\"><a href=\"#写在最后\" class=\"headerlink\" title=\"写在最后\"></a>写在最后</h1><p><em>但是下载还是有些地方需要注意，爬取速度不要太快，设置一个间隔如 <code>time.sleep(6)</code>，不然容易爬崩别人的网站。虽然设置了，但效果不太佳还是会出现ip被封。关于出现异常报错connection absorted / requests. exceptions.ConnectionError 解决方案我是参考大佬的，附上链接</em> <a href=\"https://blog.csdn.net/a1007720052/article/details/83383220\">python爬虫 requests异常requests.exceptions.ConnectionError: HTTPSConnectionPool Max retries exceeded</a><br><img src=\"https://img-blog.csdnimg.cn/20210131183718496.png\" alt=\"![在这里插入图片描述](https://img-blog.csdnimg.cn/20210131183008518.png![在这里插入图片描述](https://img-blog.csdnimg.cn/20210131183703292.png\"></p>\n<p><img src=\"https://img-blog.csdnimg.cn/20210131190806550.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzgyNzM3Ng==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<p><em>还有可以拓展到搜索一本指定的书，这个网站也提供了搜索框，只是由于作者还不会浏览器模拟和表单提交，而且无法从url的后缀数字中发现书籍规律，只能告一段落了，之后再补上吧</em></p>\n","categories":["爬虫"],"tags":["python","爬虫"]},{"title":"湖南科技大学Android课程设计之个人理财小助手APP","url":"/2021/02/26/%E6%B9%96%E5%8D%97%E7%A7%91%E6%8A%80%E5%A4%A7%E5%AD%A6Android%E8%AF%BE%E7%A8%8B%E8%AE%BE%E8%AE%A1%E4%B9%8B%E4%B8%AA%E4%BA%BA%E7%90%86%E8%B4%A2%E5%B0%8F%E5%8A%A9%E6%89%8BAPP/","content":"<h1 id=\"项目介绍\"><a href=\"#项目介绍\" class=\"headerlink\" title=\"项目介绍\"></a>项目介绍</h1><p>基于android的理财小助手app，开发采用了增量式软件开发模型，采用轻量级数据库SQLite存储。主要应用了listView、button、editText、textView、spinner、dialog、CalendarView、menu等Android原生控件，以及自定义View控件ShanView(扇形图)、CircleProgressBar(环形进度条);采用了分层式类似MVC的结构，分为Activity(View)、JavaBean(Model)、Service（Control）,另外有Util包（工具类,包含字符串处理类、时间格式转换类、数据库操作类等）。以达到在模块层次上减小耦合、提高内聚的设计目标。</p>\n<h1 id=\"目录结构\"><a href=\"#目录结构\" class=\"headerlink\" title=\"目录结构\"></a>目录结构</h1><p><img src=\"https://img-blog.csdnimg.cn/20210226150635101.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzgyNzM3Ng==,size_16,color_FFFFFF,t_70\"><br>上图是src下的java代码，编写的类比较多，有三十多个，大部分是一个页面对应一个java类。<br><img src=\"https://img-blog.csdnimg.cn/20210226152015177.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzgyNzM3Ng==,size_16,color_FFFFFF,t_70\"><br>上图是src下的布局文件，分为登录注册页、主菜单页、新增支出页、新增收入页、我的支出/收入展示页、数据管理页、系统设置页、收支便签展示页等等，角色分为用户和管理员（内置，用于管理多个普通账户）</p>\n<h1 id=\"总体设计\"><a href=\"#总体设计\" class=\"headerlink\" title=\"总体设计\"></a>总体设计</h1><p><img src=\"https://img-blog.csdnimg.cn/20210226151313405.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzgyNzM3Ng==,size_16,color_FFFFFF,t_70\"></p>\n<h1 id=\"效果展示\"><a href=\"#效果展示\" class=\"headerlink\" title=\"效果展示\"></a>效果展示</h1><p>下面是部分页面的具体效果。</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20210226160531490.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzgyNzM3Ng==,size_16,color_FFFFFF,t_70\" alt=\"登录注册页\"></p>\n<p><img src=\"https://img-blog.csdnimg.cn/20210226163121464.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzgyNzM3Ng==,size_16,color_FFFFFF,t_70\" alt=\"管理员后台页\"></p>\n<p><img src=\"https://img-blog.csdnimg.cn/20210226155408953.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzgyNzM3Ng==,size_16,color_FFFFFF,t_70\" alt=\"主菜单页\"></p>\n<p><img src=\"https://img-blog.csdnimg.cn/20210226160752159.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzgyNzM3Ng==,size_16,color_FFFFFF,t_70\" alt=\"我的支出页\"></p>\n<p><img src=\"https://img-blog.csdnimg.cn/20210226160841332.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzgyNzM3Ng==,size_16,color_FFFFFF,t_70\" alt=\"数据管理页\"></p>\n<p><img src=\"https://img-blog.csdnimg.cn/20210226160923720.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzgyNzM3Ng==,size_16,color_FFFFFF,t_70\" alt=\"季节收入页\"></p>\n<p><img src=\"https://img-blog.csdnimg.cn/20210226161023668.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzgyNzM3Ng==,size_16,color_FFFFFF,t_70\" alt=\"新增支出页\"></p>\n<p><img src=\"https://img-blog.csdnimg.cn/20210226161045735.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzgyNzM3Ng==,size_16,color_FFFFFF,t_70\" alt=\"数据管理页\"></p>\n<p><img src=\"https://img-blog.csdnimg.cn/20210226161137679.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzgyNzM3Ng==,size_16,color_FFFFFF,t_70\" alt=\"系统设置页\"></p>\n<p><img src=\"https://img-blog.csdnimg.cn/2021022616131793.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzgyNzM3Ng==,size_16,color_FFFFFF,t_70\" alt=\"便签管理页\"></p>\n<h1 id=\"源码地址\"><a href=\"#源码地址\" class=\"headerlink\" title=\"源码地址\"></a>源码地址</h1><p><a href=\"https://gitee.com/hebugui/financial-assistant-app2\">gitee仓库地址，开源不易，欢迎star</a><br><img src=\"https://img-blog.csdnimg.cn/20210226150321685.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzgyNzM3Ng==,size_16,color_FFFFFF,t_70\" alt=\"apk文件\"><br>上图是软件的apk包，可以下载到手机上安装体验。<br>注：1.初始会创建一个管理员账号，用户名：admin，密码：admin<br>2.用户需注册才能使用</p>\n<h1 id=\"项目总结\"><a href=\"#项目总结\" class=\"headerlink\" title=\"项目总结\"></a>项目总结</h1><p>这个项目收获挺多的，独立完成一个小软件的开发。趁着大三寒假空闲之余就整理了一下，适合安卓新手入门。</p>\n","categories":["Android"],"tags":["Android","课程设计"]},{"title":"湖南科技大学web课程设计之网页聊天室的实现","url":"/2021/03/25/%E6%B9%96%E5%8D%97%E7%A7%91%E6%8A%80%E5%A4%A7%E5%AD%A6web%E8%AF%BE%E7%A8%8B%E8%AE%BE%E8%AE%A1%E4%B9%8B%E7%BD%91%E9%A1%B5%E8%81%8A%E5%A4%A9%E5%AE%A4%E7%9A%84%E5%AE%9E%E7%8E%B0/","content":"<h1 id=\"项目介绍\"><a href=\"#项目介绍\" class=\"headerlink\" title=\"项目介绍\"></a>项目介绍</h1><p>由于WEB的易用性、实用性，它很快占据了主导地位，目前成为使用最广泛、最有前途、最具魅力的信息传播技术。本次实验就就基于web技术对社交网站开发的初步探索。本次课程设计内容为仿微信网页版Web即时聊天系统。<br>实现Web的多对多即时的文本消息聊天功能。<br>实现Web的表情的发送、接收和显示功能。<br>实现Web的图片的发送、接收和显示功能。<br>实现本地消息的存储，在离线的时候也能加载和查看历史消息；<br>要求使用WebSocket；</p>\n<h1 id=\"目录结构\"><a href=\"#目录结构\" class=\"headerlink\" title=\"目录结构\"></a>目录结构</h1><p><img src=\"https://img-blog.csdnimg.cn/20210325120640129.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzgyNzM3Ng==,size_16,color_FFFFFF,t_70\" alt=\"目录结构\"><br>项目采用html+css+js+nodejs+mysql开发。 </p>\n<p>基于Nodejs平台的web开发框架–Express/Socket.io</p>\n<p>文件目录</p>\n<blockquote>\n<p>app.js nodejs编写的后端程序</p>\n</blockquote>\n<blockquote>\n<p>db 封装的数据库操作</p>\n</blockquote>\n<blockquote>\n<p>node_modules 模块依赖</p>\n</blockquote>\n<blockquote>\n<p>public 静态资源，即前端三大件</p>\n</blockquote>\n<blockquote>\n<p>.json 配置文件，不用管</p>\n</blockquote>\n<h1 id=\"效果展示\"><a href=\"#效果展示\" class=\"headerlink\" title=\"效果展示\"></a>效果展示</h1><p><img src=\"https://img-blog.csdnimg.cn/20210325121435992.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzgyNzM3Ng==,size_16,color_FFFFFF,t_70\" alt=\"登录界面\"><br><img src=\"https://img-blog.csdnimg.cn/20210325121458130.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzgyNzM3Ng==,size_16,color_FFFFFF,t_70\" alt=\"注册界面\"></p>\n<p><img src=\"https://img-blog.csdnimg.cn/20210325121329514.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzgyNzM3Ng==,size_16,color_FFFFFF,t_70\" alt=\"用户1聊天室界面\"><br><img src=\"https://img-blog.csdnimg.cn/2021032512134867.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzgyNzM3Ng==,size_16,color_FFFFFF,t_70\" alt=\"用户2聊天室界面\"></p>\n<h1 id=\"数据库设计\"><a href=\"#数据库设计\" class=\"headerlink\" title=\"数据库设计\"></a>数据库设计</h1><p>数据库比较简单，就两张表，用户信息表和聊天信息表。<br><img src=\"https://img-blog.csdnimg.cn/20210325121556516.png\" alt=\"数据库\"><br><img src=\"https://img-blog.csdnimg.cn/2021032512162651.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzgyNzM3Ng==,size_16,color_FFFFFF,t_70\" alt=\"message表\"><br><img src=\"https://img-blog.csdnimg.cn/20210325121722528.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzgyNzM3Ng==,size_16,color_FFFFFF,t_70\" alt=\"userinformation表\"></p>\n<h1 id=\"源码地址\"><a href=\"#源码地址\" class=\"headerlink\" title=\"源码地址\"></a>源码地址</h1><p><a href=\"https://gitee.com/hebugui/web_qqchating.git\">gitee仓库地址，开源不易，欢迎star</a><br><img src=\"https://img-blog.csdnimg.cn/20210325122522515.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzgyNzM3Ng==,size_16,color_FFFFFF,t_70\" alt=\"gitee\"></p>\n<h1 id=\"项目总结\"><a href=\"#项目总结\" class=\"headerlink\" title=\"项目总结\"></a>项目总结</h1><p>做这个项目之前，我没有接触过nodejs，后来发现使用了它非常方便，语法贴近js比较好学，功能又很强大，很多封装好的模块。</p>\n<p>这个项目我的后续计划是把它部署到阿里云上，正在尝试中。之前弄过一次失败了，所以准备重新搞一下。这个项目是大三下学期整理的，课设是大二下做的，感觉也是对自己学习的一种总结吧，记录自己学习的心路历程。</p>\n","categories":["web"],"tags":["html","css","js","web","nodejs"]}]